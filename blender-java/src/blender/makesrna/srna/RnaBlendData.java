//package blender.makesrna.srna;
//
//import blender.makesrna.RNATypes.PointerRNA;
//
//public class RnaBlendData extends RnaStruct {
//	
//	public Object[] groups = new Object[1];
//	
//	public RnaBlendData(PointerRNA ptr) {
//		super(ptr);
//	}
//
//}


/* Automatically generated struct definitions for the Data API.
   Do not edit manually, changes will be overwritten.           */

package blender.makesrna.srna;

import blender.makesdna.sdna.*;

import static blender.makesrna.RnaRna.*;
import static blender.makesrna.RnaAccess.*;
import static blender.makesrna.RnaDefine.*;
import static blender.makesrna.RNATypes.*;
import blender.makesrna.rna_internal_types.*;
import blender.blenlib.*;
import blender.blenkernel.*;

import static blender.makesrna.RnaMainUtil.*;
import static blender.makesrna.RnaMainApi.*;

public class RnaBlendData extends RnaStruct {
	
public Object[] groups = new Object[1];
public Object[] scenes = new Object[1];

/* Autogenerated Functions */

public RnaBlendData(PointerRNA ptr) { super(ptr); }

private static PropCollectionGetFunc BlendData_rna_properties_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_builtin_properties_get.get(iter);
}};

private static PropCollectionBeginFunc BlendData_rna_properties_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_rna_properties;

	rna_builtin_properties_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_rna_properties_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_rna_properties_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_builtin_properties_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_rna_properties_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_rna_properties_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropPointerGetFunc BlendData_rna_type_get = new PropPointerGetFunc() {
public PointerRNA getPtr(PointerRNA ptr)
{
	return rna_builtin_type_get.getPtr(ptr);
}};

public String getFilepath() { BlendData_filepath_get.getStr(ptr, DEFAULT_BUF,0); return StringUtil.toJString(DEFAULT_BUF,0);}
private static PropStringGetFunc BlendData_filepath_get = new PropStringGetFunc() {
public void getStr(PointerRNA ptr, byte[] value, int offset)
{
	rna_Main_filepath_get.getStr(ptr, value, offset);
}};

private static PropStringLengthFunc BlendData_filepath_length = new PropStringLengthFunc() {
public int lenStr(PointerRNA ptr)
{
	return rna_Main_filepath_length.lenStr(ptr);
}};

public boolean getIs_dirty() { return BlendData_is_dirty_get.getBool(ptr); }
private static PropBooleanGetFunc BlendData_is_dirty_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_Main_is_dirty_get.getBool(ptr);
}};

private static PropCollectionGetFunc BlendData_cameras_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Camera, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_cameras_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_cameras;

	rna_Main_camera_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_cameras_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_cameras_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_cameras_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_cameras_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_scenes_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RnaScene.RNA_Scene, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_scenes_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_scenes;

	rna_Main_scene_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_scenes_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_scenes_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_scenes_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_scenes_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_objects_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Object, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_objects_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_objects;

	rna_Main_object_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_objects_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_objects_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_objects_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_objects_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_materials_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Material, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_materials_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_materials;

	rna_Main_mat_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_materials_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_materials_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_materials_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_materials_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_node_groups_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_NodeTree, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_node_groups_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_node_groups;

	rna_Main_nodetree_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_node_groups_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_node_groups_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_node_groups_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_node_groups_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_meshes_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Mesh, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_meshes_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_meshes;

	rna_Main_mesh_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_meshes_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_meshes_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_meshes_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_meshes_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_lamps_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Lamp, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_lamps_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_lamps;

	rna_Main_lamp_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_lamps_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_lamps_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_lamps_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_lamps_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_libraries_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Library, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_libraries_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_libraries;

	rna_Main_library_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_libraries_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_libraries_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_libraries_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_libraries_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_screens_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RnaScreen.RNA_Screen, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_screens_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_screens;

	rna_Main_screen_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_screens_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_screens_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_screens_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_screens_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_window_managers_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_WindowManager, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_window_managers_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_window_managers;

	rna_Main_wm_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_window_managers_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_window_managers_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_window_managers_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_window_managers_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_images_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Image, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_images_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_images;

	rna_Main_image_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_images_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_images_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_images_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_images_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_lattices_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Lattice, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_lattices_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_lattices;

	rna_Main_latt_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_lattices_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_lattices_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_lattices_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_lattices_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_curves_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Curve, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_curves_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_curves;

	rna_Main_curve_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_curves_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_curves_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_curves_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_curves_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_metaballs_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_MetaBall, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_metaballs_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_metaballs;

	rna_Main_mball_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_metaballs_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_metaballs_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_metaballs_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_metaballs_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_fonts_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_VectorFont, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_fonts_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_fonts;

	rna_Main_font_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_fonts_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_fonts_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_fonts_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_fonts_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_textures_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Texture, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_textures_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_textures;

	rna_Main_tex_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_textures_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_textures_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_textures_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_textures_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_brushes_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Brush, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_brushes_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_brushes;

	rna_Main_brush_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_brushes_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_brushes_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_brushes_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_brushes_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_worlds_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_World, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_worlds_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_worlds;

	rna_Main_world_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_worlds_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_worlds_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_worlds_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_worlds_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_groups_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Group, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_groups_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_groups;

	rna_Main_group_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_groups_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_groups_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_groups_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_groups_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_shape_keys_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Key, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_shape_keys_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_shape_keys;

	rna_Main_key_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_shape_keys_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_shape_keys_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_shape_keys_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_shape_keys_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_scripts_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_ID, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_scripts_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_scripts;

	rna_Main_script_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_scripts_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_scripts_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_scripts_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_scripts_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_texts_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Text, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_texts_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_texts;

	rna_Main_text_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_texts_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_texts_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_texts_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_texts_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_sounds_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Sound, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_sounds_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_sounds;

	rna_Main_sound_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_sounds_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_sounds_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_sounds_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_sounds_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_armatures_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Armature, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_armatures_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_armatures;

	rna_Main_armature_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_armatures_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_armatures_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_armatures_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_armatures_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_actions_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_Action, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_actions_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_actions;

	rna_Main_action_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_actions_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_actions_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_actions_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_actions_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_particles_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_ParticleSettings, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_particles_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_particles;

	rna_Main_particle_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_particles_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_particles_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_particles_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_particles_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropCollectionGetFunc BlendData_grease_pencil_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_GreasePencil, rna_iterator_listbase_get.get(iter));
}};

private static PropCollectionBeginFunc BlendData_grease_pencil_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_BlendData_grease_pencil;

	rna_Main_gpencil_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= BlendData_grease_pencil_get.get(iter);
}};

private static PropCollectionNextFunc BlendData_grease_pencil_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_next.next(iter);

	if(iter.valid)
		iter.ptr= BlendData_grease_pencil_get.get(iter);
}};

private static PropCollectionEndFunc BlendData_grease_pencil_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

/* Blendfile Data */
private static CollectionPropertyRNA rna_BlendData_rna_properties = new CollectionPropertyRNA(
	null, null,
	-1, "rna_properties", 128, "Properties",
	"RNA property collection",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_rna_properties_begin, BlendData_rna_properties_next, BlendData_rna_properties_end, BlendData_rna_properties_get, null, null, rna_builtin_properties_lookup_string, RnaProperty.RNA_Property
);

private static PointerPropertyRNA rna_BlendData_rna_type = new PointerPropertyRNA(
	null, null,
	-1, "rna_type", 524288, "RNA",
	"RNA type definition",
	0,
	PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_rna_type_get, null, null, null,RnaStruct.RNA_Struct
);

private static StringPropertyRNA rna_BlendData_filepath = new StringPropertyRNA(
	null, null,
	-1, "filepath", 0, "Filename",
	"Path to the .blend file",
	0,
	PROP_STRING, PROP_FILEPATH|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_filepath_get, BlendData_filepath_length, null, 240, ""
);

private static BooleanPropertyRNA rna_BlendData_is_dirty = new BooleanPropertyRNA(
	null, null,
	-1, "is_dirty", 2, "File is Saved",
	"Has the current session been saved to disk as a .blend file",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_is_dirty_get, null, null, null, false, null
);

private static CollectionPropertyRNA rna_BlendData_cameras = new CollectionPropertyRNA(
	null, null,
	-1, "cameras", 0, "Cameras",
	"Camera datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_cameras_begin, BlendData_cameras_next, BlendData_cameras_end, BlendData_cameras_get, null, null, null, RNA_Camera
);

private static CollectionPropertyRNA rna_BlendData_scenes = new CollectionPropertyRNA(
	null, null,
	-1, "scenes", 0, "Scenes",
	"Scene datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_scenes_begin, BlendData_scenes_next, BlendData_scenes_end, BlendData_scenes_get, null, null, null, RnaScene.RNA_Scene
);

private static CollectionPropertyRNA rna_BlendData_objects = new CollectionPropertyRNA(
	null, null,
	-1, "objects", 0, "Objects",
	"Object datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_objects_begin, BlendData_objects_next, BlendData_objects_end, BlendData_objects_get, null, null, null, RnaObject.RNA_Object
);

private static CollectionPropertyRNA rna_BlendData_materials = new CollectionPropertyRNA(
	null, null,
	-1, "materials", 0, "Materials",
	"Material datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_materials_begin, BlendData_materials_next, BlendData_materials_end, BlendData_materials_get, null, null, null, RNA_Material
);

private static CollectionPropertyRNA rna_BlendData_node_groups = new CollectionPropertyRNA(
	null, null,
	-1, "node_groups", 0, "Node Groups",
	"Node group datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_node_groups_begin, BlendData_node_groups_next, BlendData_node_groups_end, BlendData_node_groups_get, null, null, null, RNA_NodeTree
);

private static CollectionPropertyRNA rna_BlendData_meshes = new CollectionPropertyRNA(
	null, null,
	-1, "meshes", 0, "Meshes",
	"Mesh datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_meshes_begin, BlendData_meshes_next, BlendData_meshes_end, BlendData_meshes_get, null, null, null, RNA_Mesh
);

private static CollectionPropertyRNA rna_BlendData_lamps = new CollectionPropertyRNA(
	null, null,
	-1, "lamps", 0, "Lamps",
	"Lamp datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_lamps_begin, BlendData_lamps_next, BlendData_lamps_end, BlendData_lamps_get, null, null, null, RNA_Lamp
);

private static CollectionPropertyRNA rna_BlendData_libraries = new CollectionPropertyRNA(
	null, null,
	-1, "libraries", 0, "Libraries",
	"Library datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_libraries_begin, BlendData_libraries_next, BlendData_libraries_end, BlendData_libraries_get, null, null, null, RNA_Library
);

private static CollectionPropertyRNA rna_BlendData_screens = new CollectionPropertyRNA(
	null, null,
	-1, "screens", 0, "Screens",
	"Screen datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_screens_begin, BlendData_screens_next, BlendData_screens_end, BlendData_screens_get, null, null, null, RnaScreen.RNA_Screen
);

private static CollectionPropertyRNA rna_BlendData_window_managers = new CollectionPropertyRNA(
	null, null,
	-1, "window_managers", 0, "Window Managers",
	"Window manager datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_window_managers_begin, BlendData_window_managers_next, BlendData_window_managers_end, BlendData_window_managers_get, null, null, null, RNA_WindowManager
);

private static CollectionPropertyRNA rna_BlendData_images = new CollectionPropertyRNA(
	null, null,
	-1, "images", 0, "Images",
	"Image datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_images_begin, BlendData_images_next, BlendData_images_end, BlendData_images_get, null, null, null, RNA_Image
);

private static CollectionPropertyRNA rna_BlendData_lattices = new CollectionPropertyRNA(
	null, null,
	-1, "lattices", 0, "Lattices",
	"Lattice datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_lattices_begin, BlendData_lattices_next, BlendData_lattices_end, BlendData_lattices_get, null, null, null, RNA_Lattice
);

private static CollectionPropertyRNA rna_BlendData_curves = new CollectionPropertyRNA(
	null, null,
	-1, "curves", 0, "Curves",
	"Curve datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_curves_begin, BlendData_curves_next, BlendData_curves_end, BlendData_curves_get, null, null, null, RNA_Curve
);

private static CollectionPropertyRNA rna_BlendData_metaballs = new CollectionPropertyRNA(
	null, null,
	-1, "metaballs", 0, "Metaballs",
	"Metaball datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_metaballs_begin, BlendData_metaballs_next, BlendData_metaballs_end, BlendData_metaballs_get, null, null, null, RNA_MetaBall
);

private static CollectionPropertyRNA rna_BlendData_fonts = new CollectionPropertyRNA(
	null, null,
	-1, "fonts", 0, "Vector Fonts",
	"Vector font datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_fonts_begin, BlendData_fonts_next, BlendData_fonts_end, BlendData_fonts_get, null, null, null, RNA_VectorFont
);

private static CollectionPropertyRNA rna_BlendData_textures = new CollectionPropertyRNA(
	null, null,
	-1, "textures", 0, "Textures",
	"Texture datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_textures_begin, BlendData_textures_next, BlendData_textures_end, BlendData_textures_get, null, null, null, RNA_Texture
);

private static CollectionPropertyRNA rna_BlendData_brushes = new CollectionPropertyRNA(
	null, null,
	-1, "brushes", 0, "Brushes",
	"Brush datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_brushes_begin, BlendData_brushes_next, BlendData_brushes_end, BlendData_brushes_get, null, null, null, RNA_Brush
);

private static CollectionPropertyRNA rna_BlendData_worlds = new CollectionPropertyRNA(
	null, null,
	-1, "worlds", 0, "Worlds",
	"World datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_worlds_begin, BlendData_worlds_next, BlendData_worlds_end, BlendData_worlds_get, null, null, null, RNA_World
);

private static CollectionPropertyRNA rna_BlendData_groups = new CollectionPropertyRNA(
	null, null,
	-1, "groups", 0, "Groups",
	"Group datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_groups_begin, BlendData_groups_next, BlendData_groups_end, BlendData_groups_get, null, null, null, RNA_Group
);

private static CollectionPropertyRNA rna_BlendData_shape_keys = new CollectionPropertyRNA(
	null, null,
	-1, "shape_keys", 0, "Keys",
	"Key datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_shape_keys_begin, BlendData_shape_keys_next, BlendData_shape_keys_end, BlendData_shape_keys_get, null, null, null, RNA_Key
);

private static CollectionPropertyRNA rna_BlendData_scripts = new CollectionPropertyRNA(
	null, null,
	-1, "scripts", 0, "Scripts",
	"Script datablocks (DEPRECATED).",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_scripts_begin, BlendData_scripts_next, BlendData_scripts_end, BlendData_scripts_get, null, null, null, RNA_ID
);

private static CollectionPropertyRNA rna_BlendData_texts = new CollectionPropertyRNA(
	null, null,
	-1, "texts", 0, "Texts",
	"Text datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_texts_begin, BlendData_texts_next, BlendData_texts_end, BlendData_texts_get, null, null, null, RNA_Text
);

private static CollectionPropertyRNA rna_BlendData_sounds = new CollectionPropertyRNA(
	null, null,
	-1, "sounds", 0, "Sounds",
	"Sound datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_sounds_begin, BlendData_sounds_next, BlendData_sounds_end, BlendData_sounds_get, null, null, null, RNA_Sound
);

private static CollectionPropertyRNA rna_BlendData_armatures = new CollectionPropertyRNA(
	null, null,
	-1, "armatures", 0, "Armatures",
	"Armature datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_armatures_begin, BlendData_armatures_next, BlendData_armatures_end, BlendData_armatures_get, null, null, null, RNA_Armature
);

private static CollectionPropertyRNA rna_BlendData_actions = new CollectionPropertyRNA(
	null, null,
	-1, "actions", 0, "Actions",
	"Action datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_actions_begin, BlendData_actions_next, BlendData_actions_end, BlendData_actions_get, null, null, null, RNA_Action
);

private static CollectionPropertyRNA rna_BlendData_particles = new CollectionPropertyRNA(
	null, null,
	-1, "particles", 0, "Particles",
	"Particle datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_particles_begin, BlendData_particles_next, BlendData_particles_end, BlendData_particles_get, null, null, null, RNA_ParticleSettings
);

private static CollectionPropertyRNA rna_BlendData_grease_pencil = new CollectionPropertyRNA(
	null, null,
	-1, "grease_pencil", 0, "Grease Pencil",
	"Grease Pencil datablocks.",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	BlendData_grease_pencil_begin, BlendData_grease_pencil_next, BlendData_grease_pencil_end, BlendData_grease_pencil_get, null, null, null, RNA_GreasePencil
);

static { ListBase tmp = new ListBase();
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_rna_properties);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_rna_type);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_filepath);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_is_dirty);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_cameras);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_scenes);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_objects);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_materials);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_node_groups);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_meshes);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_lamps);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_libraries);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_screens);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_window_managers);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_images);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_lattices);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_curves);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_metaballs);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_fonts);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_textures);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_brushes);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_worlds);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_groups);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_shape_keys);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_scripts);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_texts);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_sounds);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_armatures);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_actions);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_particles);
	ListBaseUtil.BLI_addtail(tmp, rna_BlendData_grease_pencil);
}

static { ListBase tmp = new ListBase();
}

public static StructRNA RNA_BlendData = new StructRNA(
	RnaObject.RNA_Object, RnaContext.RNA_Context,
	null,
	rna_BlendData_rna_properties, rna_BlendData_grease_pencil,
	null,null,
	"BlendData", 0, "Blendfile Data", "Main data structure representing a .blend file and all its datablocks",
	0,
	null, rna_BlendData_rna_properties,
	null,
	null,
	null,
	null,
	null,
	null,
	null,
	null, null
);

}

