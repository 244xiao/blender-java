//
///* Automatically generated struct definitions for the Data API.
//   Do not edit manually, changes will be overwritten.           */
//
//package blender.makesrna.srna;
//
//import blender.makesdna.sdna.*;
//
//import static blender.makesrna.RnaRna.*;
//import static blender.makesrna.RnaAccess.*;
//import static blender.makesrna.RnaDefine.*;
//import static blender.makesrna.RNATypes.*;
//import blender.makesrna.rna_internal_types.*;
//import blender.blenlib.*;
//import blender.blenkernel.*;
//
//import static blender.makesrna.RnaSceneUtil.*;
//import static blender.makesrna.RnaSceneApi.*;
//
//public class RnaRenderSettings extends RnaStruct {
//	
//	public boolean use_game_engine = false;
//	public boolean has_multiple_engines = false;
//	public boolean use_simplify = false;
//	
//	/* Autogenerated Functions */
//
//	public RnaRenderSettings(PointerRNA ptr) { super(ptr); if (!(ptr.data instanceof RenderData)) System.out.println("RnaRenderSettings ptr wrong data");}
//
//	private static PropCollectionGetFunc RenderSettings_rna_properties_get = new PropCollectionGetFunc() {
//	public PointerRNA get(CollectionPropertyIterator iter)
//	{
//		return rna_builtin_properties_get.get(iter);
//	}};
//
//	private static PropCollectionBeginFunc RenderSettings_rna_properties_begin = new PropCollectionBeginFunc() {
//	public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
//	{
//
//		iter.clear();
//		iter.parent= ptr;
//		iter.prop= (PropertyRNA)rna_RenderSettings_rna_properties;
//
//		rna_builtin_properties_begin.begin(iter, ptr);
//
//		if(iter.valid)
//			iter.ptr= RenderSettings_rna_properties_get.get(iter);
//	}};
//
//	private static PropCollectionNextFunc RenderSettings_rna_properties_next = new PropCollectionNextFunc() {
//	public void next(CollectionPropertyIterator iter)
//	{
//		rna_builtin_properties_next.next(iter);
//
//		if(iter.valid)
//			iter.ptr= RenderSettings_rna_properties_get.get(iter);
//	}};
//
//	private static PropCollectionEndFunc RenderSettings_rna_properties_end = new PropCollectionEndFunc() {
//	public void end(CollectionPropertyIterator iter)
//	{
//		rna_iterator_listbase_end.end(iter);
//	}};
//
//	private static PropPointerGetFunc RenderSettings_rna_type_get = new PropPointerGetFunc() {
//	public PointerRNA getPtr(PointerRNA ptr)
//	{
//		return rna_builtin_type_get.getPtr(ptr);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_color_mode_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.planes) & 56);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_color_mode_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.planes &= ~56;
//		data.planes |= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_resolution_x_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.xsch);
//	}};
//
//	private static PropIntSetFunc RenderSettings_resolution_x_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 4, 10000);
//		data.xsch= castMe(value, data.xsch);
//	}};
//
//	private static PropIntGetFunc RenderSettings_resolution_y_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.ysch);
//	}};
//
//	private static PropIntSetFunc RenderSettings_resolution_y_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 4, 10000);
//		data.ysch= castMe(value, data.ysch);
//	}};
//
//	private static PropIntGetFunc RenderSettings_resolution_percentage_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.size);
//	}};
//
//	private static PropIntSetFunc RenderSettings_resolution_percentage_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
//		data.size= castMe(value, data.size);
//	}};
//
//	private static PropIntGetFunc RenderSettings_parts_x_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.xparts);
//	}};
//
//	private static PropIntSetFunc RenderSettings_parts_x_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 512);
//		data.xparts= castMe(value, data.xparts);
//	}};
//
//	private static PropIntGetFunc RenderSettings_parts_y_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.yparts);
//	}};
//
//	private static PropIntSetFunc RenderSettings_parts_y_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 512);
//		data.yparts= castMe(value, data.yparts);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_pixel_aspect_x_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.xasp);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_pixel_aspect_x_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1.0f, 200.0f);
//		data.xasp= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_pixel_aspect_y_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.yasp);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_pixel_aspect_y_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1.0f, 200.0f);
//		data.yasp= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_file_quality_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.quality);
//	}};
//
//	private static PropIntSetFunc RenderSettings_file_quality_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, 100);
//		data.quality= castMe(value, data.quality);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_tiff_16bit_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.subimtype) & 16) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_tiff_16bit_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.subimtype |= 16;
//		else data.subimtype &= ~16;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_cineon_log_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.subimtype) & 8) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_cineon_log_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.subimtype |= 8;
//		else data.subimtype &= ~8;
//	}};
//
//	private static PropIntGetFunc RenderSettings_cineon_black_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.cineonblack);
//	}};
//
//	private static PropIntSetFunc RenderSettings_cineon_black_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, 1024);
//		data.cineonblack= castMe(value, data.cineonblack);
//	}};
//
//	private static PropIntGetFunc RenderSettings_cineon_white_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.cineonwhite);
//	}};
//
//	private static PropIntSetFunc RenderSettings_cineon_white_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, 1024);
//		data.cineonwhite= castMe(value, data.cineonwhite);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_cineon_gamma_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.cineongamma);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_cineon_gamma_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 10.0f);
//		data.cineongamma= value;
//	}};
//	
//	public int getFfmpeg_format() { return RenderSettings_ffmpeg_format_get.getEnum(ptr); }
//	private static PropEnumGetFunc RenderSettings_ffmpeg_format_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.ffcodecdata.type) & 15);
//	}};
//
//	public void setFfmpeg_format(int value) { RenderSettings_ffmpeg_format_set.setEnum(ptr, value); }
//	private static PropEnumSetFunc RenderSettings_ffmpeg_format_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.ffcodecdata.type &= ~15;
//		data.ffcodecdata.type |= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_fps_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.frs_sec);
//	}};
//
//	private static PropIntSetFunc RenderSettings_fps_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 120);
//		data.frs_sec= castMe(value, data.frs_sec);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_fps_base_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.frs_sec_base);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_fps_base_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.1000000015f, 120.0f);
//		data.frs_sec_base= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_frame_map_old_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.framapto);
//	}};
//
//	private static PropIntSetFunc RenderSettings_frame_map_old_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 900);
//		data.framapto= castMe(value, data.framapto);
//	}};
//
//	private static PropIntGetFunc RenderSettings_frame_map_new_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.images);
//	}};
//
//	private static PropIntSetFunc RenderSettings_frame_map_new_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 900);
//		data.images= castMe(value, data.images);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_dither_intensity_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.dither_intensity);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_dither_intensity_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 2.0f);
//		data.dither_intensity= value;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_pixel_filter_type_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.filtertype);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_pixel_filter_type_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.filtertype= castMe(value, data.filtertype);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_filter_size_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.gauss);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_filter_size_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.5000000000f, 1.5000000000f);
//		data.gauss= value;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_alpha_mode_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.alphamode);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_alpha_mode_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.alphamode= castMe(value, data.alphamode);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_octree_resolution_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.ocres);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_octree_resolution_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.ocres= castMe(value, data.ocres);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_raytrace_method_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (int)(data.raytrace_structure);
//		return 0;
//	}};
//
//	private static PropEnumSetFunc RenderSettings_raytrace_method_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
////		data.raytrace_structure= castMe(value, data.raytrace_structure);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_instances_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (((data.raytrace_options) & 2) != 0);
//		return false;
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_instances_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		if(value) data.raytrace_options |= 2;
////		else data.raytrace_options &= ~2;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_local_coords_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (((data.raytrace_options) & 1) != 0);
//		return false;
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_local_coords_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		if(value) data.raytrace_options |= 1;
////		else data.raytrace_options &= ~1;
//	}};
//
//	public boolean getUse_antialiasing() { return RenderSettings_use_antialiasing_get.getBool(ptr);	}
//	private static PropBooleanGetFunc RenderSettings_use_antialiasing_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 1) != 0);
//	}};
//
//	public void setUse_antialiasing(boolean value) { RenderSettings_use_antialiasing_set.setBool(ptr, value); }
//	private static PropBooleanSetFunc RenderSettings_use_antialiasing_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 1;
//		else data.mode &= ~1;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_antialiasing_samples_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.osa);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_antialiasing_samples_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.osa= castMe(value, data.osa);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_fields_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 64) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_fields_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 64;
//		else data.mode &= ~64;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_field_order_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.mode) & 8192);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_field_order_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.mode &= ~8192;
//		data.mode |= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_fields_still_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 128) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_fields_still_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 128;
//		else data.mode &= ~128;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_shadows_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 2) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_shadows_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 2;
//		else data.mode &= ~2;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_envmaps_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 16) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_envmaps_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 16;
//		else data.mode &= ~16;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_radiosity_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 256) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_radiosity_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 256;
//		else data.mode &= ~256;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_sss_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 2097152) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_sss_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 2097152;
//		else data.mode &= ~2097152;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_raytrace_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 65536) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_raytrace_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 65536;
//		else data.mode &= ~65536;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_textures_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return !(((data.scemode) & 8192) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_textures_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(!value) data.scemode |= 8192;
//		else data.scemode &= ~8192;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_edge_enhance_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 32) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_edge_enhance_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 32;
//		else data.mode &= ~32;
//	}};
//
//	private static PropIntGetFunc RenderSettings_edge_threshold_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.edgeint);
//	}};
//
//	private static PropIntSetFunc RenderSettings_edge_threshold_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, 255);
//		data.edgeint= castMe(value, data.edgeint);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_edge_color_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.edgeR);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_edge_color_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.edgeR= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_threads_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		return rna_RenderSettings_threads_get.getInt(ptr);
//	}};
//
//	private static PropIntSetFunc RenderSettings_threads_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 64);
//		data.threads= castMe(value, data.threads);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_threads_mode_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.mode) & 524288);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_threads_mode_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.mode &= ~524288;
//		data.mode |= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_motion_blur_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 16384) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_motion_blur_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 16384;
//		else data.mode &= ~16384;
//	}};
//
//	private static PropIntGetFunc RenderSettings_motion_blur_samples_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (int)(data.mblur_samples);
//		return 0;
//	}};
//
//	private static PropIntSetFunc RenderSettings_motion_blur_samples_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 1, 32);
////		data.mblur_samples= castMe(value, data.mblur_samples);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_motion_blur_shutter_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.blurfac);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_motion_blur_shutter_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0099999998f, 10.0f);
//		data.blurfac= value;
//	}};
//
//	public boolean getUse_border() { return RenderSettings_use_border_get.getBool(ptr);	}
//	private static PropBooleanGetFunc RenderSettings_use_border_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 512) != 0);
//	}};
//
//	public void setUse_border(boolean value) { RenderSettings_use_border_set.setBool(ptr, value); }
//	private static PropBooleanSetFunc RenderSettings_use_border_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 512;
//		else data.mode &= ~512;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_border_min_x_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.border.xmin);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_border_min_x_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//		data.border.xmin= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_border_min_y_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.border.ymin);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_border_min_y_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//		data.border.ymin= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_border_max_x_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.border.xmax);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_border_max_x_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//		data.border.xmax= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_border_max_y_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.border.ymax);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_border_max_y_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//		data.border.ymax= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_crop_to_border_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 2048) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_crop_to_border_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 2048;
//		else data.mode &= ~2048;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_placeholder_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 8388608) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_placeholder_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 8388608;
//		else data.mode &= ~8388608;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_overwrite_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return !(((data.mode) & 4194304) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_overwrite_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(!value) data.mode |= 4194304;
//		else data.mode &= ~4194304;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_compositing_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 64) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_compositing_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 64;
//		else data.scemode &= ~64;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_sequencer_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 1) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_sequencer_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 1;
//		else data.scemode &= ~1;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_color_management_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.color_mgt_flag) & 1) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_color_management_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.color_mgt_flag |= 1;
//		else data.color_mgt_flag &= ~1;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_file_extension_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 16) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_file_extension_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 16;
//		else data.scemode &= ~16;
//	}};
//
//	public int getFile_format() { return RenderSettings_file_format_get.getEnum(ptr); }
//	private static PropEnumGetFunc RenderSettings_file_format_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.imtype);
//	}};
//
//	public void setFile_format(int value) { RenderSettings_file_format_set.setEnum(ptr, value); }
//	private static PropEnumSetFunc RenderSettings_file_format_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		rna_RenderSettings_file_format_set.setEnum(ptr, value);
//	}};
//
//	private static PropStringGetFunc RenderSettings_file_extension_get = new PropStringGetFunc() {
//	public void getStr(PointerRNA ptr, byte[] value, int offset)
//	{
//		rna_SceneRender_file_ext_get.getStr(ptr, value, offset);
//	}};
//
//	private static PropStringLengthFunc RenderSettings_file_extension_length = new PropStringLengthFunc() {
//	public int lenStr(PointerRNA ptr)
//	{
//		return rna_SceneRender_file_ext_length.lenStr(ptr);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_is_movie_format_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		return rna_RenderSettings_is_movie_fomat_get.getBool(ptr);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_free_image_textures_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 256) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_free_image_textures_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 256;
//		else data.scemode &= ~256;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_free_unused_nodes_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 2048) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_free_unused_nodes_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 2048;
//		else data.scemode &= ~2048;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_save_buffers_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		return rna_RenderSettings_save_buffers_get.getBool(ptr);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_save_buffers_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 1024;
//		else data.scemode &= ~1024;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_full_sample_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		return rna_RenderSettings_full_sample_get.getBool(ptr);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_full_sample_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 32768;
//		else data.scemode &= ~32768;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_backbuf_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.bufflag) & 1) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_backbuf_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.bufflag |= 1;
//		else data.bufflag &= ~1;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_display_mode_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.displaymode) & 3);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_display_mode_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.displaymode &= ~3;
//		data.displaymode |= value;
//	}};
//
//	private static PropStringGetFunc RenderSettings_filepath_get = new PropStringGetFunc() {
//	public void getStr(PointerRNA ptr, byte[] value, int offset)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		StringUtil.BLI_strncpy(value,offset, data.pic,0, data.pic.length);
//	}};
//
//	private static PropStringLengthFunc RenderSettings_filepath_length = new PropStringLengthFunc() {
//	public int lenStr(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return StringUtil.strlen(data.pic,0);
//	}};
//
//	private static PropStringSetFunc RenderSettings_filepath_set = new PropStringSetFunc() {
//	public void setStr(PointerRNA ptr, byte[] value, int offset)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		StringUtil.BLI_strncpy(data.pic,0, value,offset, data.pic.length);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_bake_type_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.bake_mode) & 7);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_bake_type_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.bake_mode &= ~7;
//		data.bake_mode |= value;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_bake_normal_space_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.bake_normal_space) & 3);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_bake_normal_space_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.bake_normal_space &= ~3;
//		data.bake_normal_space |= value;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_bake_quad_split_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.bake_quad_split);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_bake_quad_split_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.bake_quad_split= castMe(value, data.bake_quad_split);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_bake_aa_mode_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return ((data.bake_osa) & 31);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_bake_aa_mode_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		data.bake_osa &= ~31;
//		data.bake_osa |= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_bake_selected_to_active_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.bake_flag) & 4) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_bake_selected_to_active_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.bake_flag |= 4;
//		else data.bake_flag &= ~4;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_bake_normalize_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.bake_flag) & 8) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_bake_normalize_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.bake_flag |= 8;
//		else data.bake_flag &= ~8;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_bake_clear_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.bake_flag) & 1) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_bake_clear_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.bake_flag |= 1;
//		else data.bake_flag &= ~1;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_bake_antialiasing_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.bake_flag) & 2) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_bake_antialiasing_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.bake_flag |= 2;
//		else data.bake_flag &= ~2;
//	}};
//
//	private static PropIntGetFunc RenderSettings_bake_margin_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.bake_filter);
//	}};
//
//	private static PropIntSetFunc RenderSettings_bake_margin_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, 32);
//		data.bake_filter= castMe(value, data.bake_filter);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_bake_distance_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.bake_maxdist);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_bake_distance_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1000.0f);
//		data.bake_maxdist= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_bake_bias_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.bake_biasdist);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_bake_bias_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1000.0f);
//		data.bake_biasdist= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_time_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 1) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_time_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 1;
//		else data.stamp &= ~1;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_date_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 4) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_date_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 4;
//		else data.stamp &= ~4;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_frame_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 2) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_frame_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 2;
//		else data.stamp &= ~2;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_camera_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 8) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_camera_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 8;
//		else data.stamp &= ~8;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_scene_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 16) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_scene_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 16;
//		else data.stamp &= ~16;
//	}};
//
//	public boolean getUse_stamp_note() { return RenderSettings_use_stamp_note_get.getBool(ptr); }
//	private static PropBooleanGetFunc RenderSettings_use_stamp_note_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 32) != 0);
//	}};
//
//	public void setUse_stamp_note(boolean value) { RenderSettings_use_stamp_note_set.setBool(ptr, value); }
//	private static PropBooleanSetFunc RenderSettings_use_stamp_note_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 32;
//		else data.stamp &= ~32;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_marker_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 128) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_marker_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 128;
//		else data.stamp &= ~128;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_filename_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 256) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_filename_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 256;
//		else data.stamp &= ~256;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_sequencer_strip_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 512) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_sequencer_strip_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 512;
//		else data.stamp &= ~512;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_stamp_render_time_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 1024) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_stamp_render_time_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 1024;
//		else data.stamp &= ~1024;
//	}};
//
//	private static PropStringGetFunc RenderSettings_stamp_note_text_get = new PropStringGetFunc() {
//	public void getStr(PointerRNA ptr, byte[] value, int offset)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		StringUtil.BLI_strncpy(value,offset, data.stamp_udata,0, data.stamp_udata.length);
//	}};
//
//	private static PropStringLengthFunc RenderSettings_stamp_note_text_length = new PropStringLengthFunc() {
//	public int lenStr(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return StringUtil.strlen(data.stamp_udata,0);
//	}};
//
//	private static PropStringSetFunc RenderSettings_stamp_note_text_set = new PropStringSetFunc() {
//	public void setStr(PointerRNA ptr, byte[] value, int offset)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		StringUtil.BLI_strncpy(data.stamp_udata,0, value,offset, data.stamp_udata.length);
//	}};
//
//	public boolean getUse_stamp() { return RenderSettings_use_stamp_get.getBool(ptr); }
//	private static PropBooleanGetFunc RenderSettings_use_stamp_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.stamp) & 64) != 0);
//	}};
//
//	public void setUse_stamp(boolean value) { RenderSettings_use_stamp_set.setBool(ptr, value); }
//	private static PropBooleanSetFunc RenderSettings_use_stamp_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.stamp |= 64;
//		else data.stamp &= ~64;
//	}};
//
//	private static PropIntGetFunc RenderSettings_stamp_font_size_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.stamp_font_id);
//	}};
//
//	private static PropIntSetFunc RenderSettings_stamp_font_size_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 8, 64);
//		data.stamp_font_id= castMe(value, data.stamp_font_id);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_stamp_foreground_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (float)(data.fg_stamp);
//		return (float)(data.fg_stamp[0]);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_stamp_foreground_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
////		data.fg_stamp= value;
//		data.fg_stamp[0]= value;
//	}};
//
//	private static PropFloatGetFunc RenderSettings_stamp_background_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (float)(data.bg_stamp);
//		return (float)(data.bg_stamp[0]);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_stamp_background_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
////		data.bg_stamp= value;
//		data.bg_stamp[0]= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_sequencer_gl_preview_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (((data.seq_flag) & 1) != 0);
//		return false;
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_sequencer_gl_preview_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		if(value) data.seq_flag |= 1;
////		else data.seq_flag &= ~1;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_sequencer_gl_render_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (((data.seq_flag) & 2) != 0);
//		return false;
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_sequencer_gl_render_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		if(value) data.seq_flag |= 2;
////		else data.seq_flag &= ~2;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_sequencer_gl_preview_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (int)(data.seq_prev_type);
//		return 0;
//	}};
//
//	private static PropEnumSetFunc RenderSettings_sequencer_gl_preview_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
////		data.seq_prev_type= castMe(value, data.seq_prev_type);
//	}};
//
//	private static PropEnumGetFunc RenderSettings_sequencer_gl_render_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (int)(data.seq_rend_type);
//		return 0;
//	}};
//
//	private static PropEnumSetFunc RenderSettings_sequencer_gl_render_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
////		data.seq_rend_type= castMe(value, data.seq_rend_type);
//	}};
//
//	private static PropCollectionGetFunc RenderSettings_layers_get = new PropCollectionGetFunc() {
//	public PointerRNA get(CollectionPropertyIterator iter)
//	{
//		return null;
//	}};
//
//	private static PropCollectionBeginFunc RenderSettings_layers_begin = new PropCollectionBeginFunc() {
//	public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//
//		iter.clear();
//		iter.parent= ptr;
//		iter.prop= (PropertyRNA)rna_RenderSettings_layers;
//
//		rna_iterator_listbase_begin(iter, data.layers, null);
//
//		if(iter.valid)
//			iter.ptr= RenderSettings_layers_get.get(iter);
//	}};
//
//	private static PropCollectionEndFunc RenderSettings_layers_end = new PropCollectionEndFunc() {
//	public void end(CollectionPropertyIterator iter)
//	{
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_single_layer_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.scemode) & 512) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_single_layer_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.scemode |= 512;
//		else data.scemode &= ~512;
//	}};
//
//	private static PropEnumGetFunc RenderSettings_engine_get = new PropEnumGetFunc() {
//	public int getEnum(PointerRNA ptr)
//	{
//		return rna_RenderSettings_engine_get.getEnum(ptr);
//	}};
//
//	private static PropEnumSetFunc RenderSettings_engine_set = new PropEnumSetFunc() {
//	public void setEnum(PointerRNA ptr, int value)
//	{
//		rna_RenderSettings_engine_set.setEnum(ptr, value);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_has_multiple_engines_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		return rna_RenderSettings_multiple_engines_get.getBool(ptr);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_game_engine_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		return rna_RenderSettings_use_game_engine_get.getBool(ptr);
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_simplify_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (((data.mode) & 16777216) != 0);
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_simplify_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		if(value) data.mode |= 16777216;
//		else data.mode &= ~16777216;
//	}};
//
//	private static PropIntGetFunc RenderSettings_simplify_subdivision_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.simplify_subsurf);
//	}};
//
//	private static PropIntSetFunc RenderSettings_simplify_subdivision_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
//		data.simplify_subsurf= castMe(value, data.simplify_subsurf);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_simplify_child_particles_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.simplify_particles);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_simplify_child_particles_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.simplify_particles= value;
//	}};
//
//	private static PropIntGetFunc RenderSettings_simplify_shadow_samples_get = new PropIntGetFunc() {
//	public int getInt(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (int)(data.simplify_shadowsamples);
//	}};
//
//	private static PropIntSetFunc RenderSettings_simplify_shadow_samples_set = new PropIntSetFunc() {
//	public void setInt(PointerRNA ptr, int value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
//		data.simplify_shadowsamples= castMe(value, data.simplify_shadowsamples);
//	}};
//
//	private static PropFloatGetFunc RenderSettings_simplify_ao_sss_get = new PropFloatGetFunc() {
//	public float getFloat(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		return (float)(data.simplify_aosss);
//	}};
//
//	private static PropFloatSetFunc RenderSettings_simplify_ao_sss_set = new PropFloatSetFunc() {
//	public void setFloat(PointerRNA ptr, float value)
//	{
//		RenderData data= (RenderData)(ptr.data);
//		value= value;
//		data.simplify_aosss= value;
//	}};
//
//	private static PropBooleanGetFunc RenderSettings_use_simplify_triangulate_get = new PropBooleanGetFunc() {
//	public boolean getBool(PointerRNA ptr)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		return (((data.simplify_flag) & 1) != 0);
//		return false;
//	}};
//
//	private static PropBooleanSetFunc RenderSettings_use_simplify_triangulate_set = new PropBooleanSetFunc() {
//	public void setBool(PointerRNA ptr, boolean value)
//	{
//		RenderData data= (RenderData)(ptr.data);
////		if(value) data.simplify_flag |= 1;
////		else data.simplify_flag &= ~1;
//	}};
//
//	/* Render Data */
//	private static CollectionPropertyRNA rna_RenderSettings_rna_properties = new CollectionPropertyRNA(
//		null, null,
//		-1, "rna_properties", 128, "Properties",
//		"RNA property collection",
//		0,
//		PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_rna_properties_begin, RenderSettings_rna_properties_next, RenderSettings_rna_properties_end, RenderSettings_rna_properties_get, null, null, rna_builtin_properties_lookup_string, RnaProperty.RNA_Property
//	);
//
//	private static PointerPropertyRNA rna_RenderSettings_rna_type = new PointerPropertyRNA(
//		null, null,
//		-1, "rna_type", 524288, "RNA",
//		"RNA type definition",
//		0,
//		PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_rna_type_get, null, null, null,RnaStruct.RNA_Struct
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_color_mode_items = {
//		new EnumPropertyItem(8, "BW", 0, "BW", "Images are saved with BW (grayscale) data"),
//		new EnumPropertyItem(24, "RGB", 0, "RGB", "Images are saved with RGB (color) data"),
//		new EnumPropertyItem(32, "RGBA", 0, "RGBA", "Images are saved with RGB and Alpha data (if supported)"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_color_mode = new EnumPropertyRNA(
//		null, null,
//		-1, "color_mode", 3, "Color Mode",
//		"Choose BW for saving greyscale images, RGB for saving red, green and blue channels, AND RGBA for saving red, green, blue + alpha channels",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_color_mode_get, RenderSettings_color_mode_set, null, rna_RenderSettings_color_mode_items, 3, 8
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_resolution_x = new IntPropertyRNA(
//		null, null,
//		-1, "resolution_x", 3, "Resolution X",
//		"Number of horizontal pixels in the rendered image",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_resolution_x_get, RenderSettings_resolution_x_set, null, null, null,
//		4, 10000, 4, 10000, 1, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_resolution_y = new IntPropertyRNA(
//		null, null,
//		-1, "resolution_y", 3, "Resolution Y",
//		"Number of vertical pixels in the rendered image",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_resolution_y_get, RenderSettings_resolution_y_set, null, null, null,
//		4, 10000, 4, 10000, 1, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_resolution_percentage = new IntPropertyRNA(
//		null, null,
//		-1, "resolution_percentage", 3, "Resolution %",
//		"Percentage scale for render resolution",
//		0,
//		PROP_INT, PROP_PERCENTAGE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_resolution_percentage_get, RenderSettings_resolution_percentage_set, null, null, null,
//		1, 100, 0, INT_MAX, 10, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_parts_x = new IntPropertyRNA(
//		null, null,
//		-1, "parts_x", 3, "Parts X",
//		"Number of horizontal tiles to use while rendering",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_parts_x_get, RenderSettings_parts_x_set, null, null, null,
//		1, 512, 1, 512, 1, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_parts_y = new IntPropertyRNA(
//		null, null,
//		-1, "parts_y", 3, "Parts Y",
//		"Number of vertical tiles to use while rendering",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_parts_y_get, RenderSettings_parts_y_set, null, null, null,
//		1, 512, 1, 512, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_pixel_aspect_x = new FloatPropertyRNA(
//		null, null,
//		-1, "pixel_aspect_x", 3, "Pixel Aspect X",
//		"Horizontal aspect ratio - for anamorphic or non-square pixel output",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_pixel_aspect_x_get, RenderSettings_pixel_aspect_x_set, null, null, null, 1.0f, 200.0f, 1.0f, 200.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_pixel_aspect_y = new FloatPropertyRNA(
//		null, null,
//		-1, "pixel_aspect_y", 3, "Pixel Aspect Y",
//		"Vertical aspect ratio - for anamorphic or non-square pixel output",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_pixel_aspect_y_get, RenderSettings_pixel_aspect_y_set, null, null, null, 1.0f, 200.0f, 1.0f, 200.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_file_quality = new IntPropertyRNA(
//		null, null,
//		-1, "file_quality", 3, "Quality",
//		"Quality of JPEG images, AVI Jpeg and SGI movies, Compression for PNG\'s",
//		0,
//		PROP_INT, PROP_PERCENTAGE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_file_quality_get, RenderSettings_file_quality_set, null, null, null,
//		0, 100, 0, 100, 1, 0, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_tiff_16bit = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_tiff_16bit", 3, "16 Bit",
//		"Save TIFF with 16 bits per channel",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_tiff_16bit_get, RenderSettings_use_tiff_16bit_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_cineon_log = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_cineon_log", 3, "Log",
//		"Convert to logarithmic color space",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_cineon_log_get, RenderSettings_use_cineon_log_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_cineon_black = new IntPropertyRNA(
//		null, null,
//		-1, "cineon_black", 3, "B",
//		"Log conversion reference blackpoint",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_cineon_black_get, RenderSettings_cineon_black_set, null, null, null,
//		0, 1024, 0, 1024, 1, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_cineon_white = new IntPropertyRNA(
//		null, null,
//		-1, "cineon_white", 3, "W",
//		"Log conversion reference whitepoint",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_cineon_white_get, RenderSettings_cineon_white_set, null, null, null,
//		0, 1024, 0, 1024, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_cineon_gamma = new FloatPropertyRNA(
//		null, null,
//		-1, "cineon_gamma", 3, "G",
//		"Log conversion gamma",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_cineon_gamma_get, RenderSettings_cineon_gamma_set, null, null, null, 0.0f, 10.0f, 0.0f, 10.0f, 10.0f, 3, 0.0f, null
//	);
//	
//	private static EnumPropertyItem[] rna_RenderSettings_ffmpeg_format_items = {
//		new EnumPropertyItem(0, "MPEG1", 0, "MPEG-1", ""),
//		new EnumPropertyItem(1, "MPEG2", 0, "MPEG-2", ""),
//		new EnumPropertyItem(2, "MPEG4", 0, "MPEG-4", ""),
//		new EnumPropertyItem(3, "AVI", 0, "AVI", ""),
//		new EnumPropertyItem(4, "QUICKTIME", 0, "Quicktime", ""),
//		new EnumPropertyItem(5, "DV", 0, "DV", ""),
//		new EnumPropertyItem(6, "H264", 0, "H.264", ""),
//		new EnumPropertyItem(7, "XVID", 0, "Xvid", ""),
//		new EnumPropertyItem(10, "OGG", 0, "Ogg", ""),
//		new EnumPropertyItem(9, "MKV", 0, "Matroska", ""),
//		new EnumPropertyItem(8, "FLASH", 0, "Flash", ""),
//		new EnumPropertyItem(11, "WAV", 0, "Wav", ""),
//		new EnumPropertyItem(12, "MP3", 0, "Mp3", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_ffmpeg_format = new EnumPropertyRNA(
//		null, null,
//		-1, "ffmpeg_format", 3, "Format",
//		"Output file format",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_ffmpeg_format_get, RenderSettings_ffmpeg_format_set, null, rna_RenderSettings_ffmpeg_format_items, 13, 0
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_fps = new IntPropertyRNA(
//		null, null,
//		-1, "fps", 1, "FPS",
//		"Framerate, expressed in frames per second",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_fps_get, RenderSettings_fps_set, null, null, null,
//		1, 120, 1, 120, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_fps_base = new FloatPropertyRNA(
//		null, null,
//		-1, "fps_base", 1, "FPS Base",
//		"Framerate base",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_fps_base_get, RenderSettings_fps_base_set, null, null, null, 0.1000000015f, 120.0f, 0.1000000015f, 120.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_frame_map_old = new IntPropertyRNA(
//		null, null,
//		-1, "frame_map_old", 1, "Frame Map Old",
//		"Specify old mapping value in frames",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_framelen_update, 67305472, null, null,
//		0, -1, null,
//		RenderSettings_frame_map_old_get, RenderSettings_frame_map_old_set, null, null, null,
//		1, 900, 1, 900, 1, 0, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_frame_map_new = new IntPropertyRNA(
//		null, null,
//		-1, "frame_map_new", 1, "Frame Map New",
//		"Specify how many frames the Map Old will last",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_framelen_update, 67305472, null, null,
//		0, -1, null,
//		RenderSettings_frame_map_new_get, RenderSettings_frame_map_new_set, null, null, null,
//		1, 900, 1, 900, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_dither_intensity = new FloatPropertyRNA(
//		null, null,
//		-1, "dither_intensity", 3, "Dither Intensity",
//		"Amount of dithering noise added to the rendered image to break up banding",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_dither_intensity_get, RenderSettings_dither_intensity_set, null, null, null, 0.0f, 2.0f, 0.0f, 2.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_pixel_filter_type_items = {
//		new EnumPropertyItem(0, "BOX", 0, "Box", ""),
//		new EnumPropertyItem(1, "TENT", 0, "Tent", ""),
//		new EnumPropertyItem(2, "QUADRATIC", 0, "Quadratic", ""),
//		new EnumPropertyItem(3, "CUBIC", 0, "Cubic", ""),
//		new EnumPropertyItem(4, "CATMULLROM", 0, "Catmull-Rom", ""),
//		new EnumPropertyItem(5, "GAUSSIAN", 0, "Gaussian", ""),
//		new EnumPropertyItem(6, "MITCHELL", 0, "Mitchell-Netravali", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_pixel_filter_type = new EnumPropertyRNA(
//		null, null,
//		-1, "pixel_filter_type", 3, "Pixel Filter",
//		"Reconstruction filter used for combining anti-aliasing samples",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_pixel_filter_type_get, RenderSettings_pixel_filter_type_set, null, rna_RenderSettings_pixel_filter_type_items, 7, 0
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_filter_size = new FloatPropertyRNA(
//		null, null,
//		-1, "filter_size", 3, "Filter Size",
//		"Pixel width over which the reconstruction filter combines samples",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_filter_size_get, RenderSettings_filter_size_set, null, null, null, 0.5000000000f, 1.5000000000f, 0.5000000000f, 1.5000000000f, 10.0f, 3, 0.0f, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_alpha_mode_items = {
//		new EnumPropertyItem(0, "SKY", 0, "Sky", "Transparent pixels are filled with sky color"),
//		new EnumPropertyItem(1, "PREMUL", 0, "Premultiplied", "Transparent RGB pixels are multiplied by the alpha channel"),
//		new EnumPropertyItem(2, "STRAIGHT", 0, "Straight Alpha", "Transparent RGB and alpha pixels are unmodified"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_alpha_mode = new EnumPropertyRNA(
//		null, null,
//		-1, "alpha_mode", 3, "Alpha Mode",
//		"Representation of alpha information in the RGBA pixels",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_alpha_mode_get, RenderSettings_alpha_mode_set, null, rna_RenderSettings_alpha_mode_items, 3, 0
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_octree_resolution_items = {
//		new EnumPropertyItem(64, "64", 0, "64", ""),
//		new EnumPropertyItem(128, "128", 0, "128", ""),
//		new EnumPropertyItem(256, "256", 0, "256", ""),
//		new EnumPropertyItem(512, "512", 0, "512", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_octree_resolution = new EnumPropertyRNA(
//		null, null,
//		-1, "octree_resolution", 3, "Octree Resolution",
//		"Resolution of raytrace accelerator. Use higher resolutions for larger scenes",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_octree_resolution_get, RenderSettings_octree_resolution_set, null, rna_RenderSettings_octree_resolution_items, 4, 64
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_raytrace_method_items = {
//		new EnumPropertyItem(0, "AUTO", 0, "Auto", ""),
//		new EnumPropertyItem(1, "OCTREE", 0, "Octree", "Use old Octree structure"),
//		new EnumPropertyItem(2, "BLIBVH", 0, "BLI BVH", "Use BLI K-Dop BVH.c"),
//		new EnumPropertyItem(3, "VBVH", 0, "vBVH", ""),
//		new EnumPropertyItem(4, "SIMD_SVBVH", 0, "SIMD SVBVH", ""),
//		new EnumPropertyItem(5, "SIMD_QBVH", 0, "SIMD QBVH", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_raytrace_method = new EnumPropertyRNA(
//		null, null,
//		-1, "raytrace_method", 3, "Raytrace Acceleration Structure",
//		"Type of raytrace accelerator structure",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_raytrace_method_get, RenderSettings_raytrace_method_set, null, rna_RenderSettings_raytrace_method_items, 6, 0
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_instances = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_instances", 3, "Use Instances",
//		"Instance support leads to effective memory reduction when using duplicates",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_instances_get, RenderSettings_use_instances_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_local_coords = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_local_coords", 3, "Use Local Coords",
//		"Vertex coordinates are stored localy on each primitive. Increases memory usage, but may have impact on speed",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_local_coords_get, RenderSettings_use_local_coords_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_antialiasing = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_antialiasing", 3, "Anti-Aliasing",
//		"Render and combine multiple samples per pixel to prevent jagged edges",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_antialiasing_get, RenderSettings_use_antialiasing_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_antialiasing_samples_items = {
//		new EnumPropertyItem(5, "5", 0, "5", ""),
//		new EnumPropertyItem(8, "8", 0, "8", ""),
//		new EnumPropertyItem(11, "11", 0, "11", ""),
//		new EnumPropertyItem(16, "16", 0, "16", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_antialiasing_samples = new EnumPropertyRNA(
//		null, null,
//		-1, "antialiasing_samples", 3, "Anti-Aliasing Samples",
//		"Amount of anti-aliasing samples per pixel",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_antialiasing_samples_get, RenderSettings_antialiasing_samples_set, null, rna_RenderSettings_antialiasing_samples_items, 4, 5
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_fields = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_fields", 3, "Fields",
//		"Render image to two fields per frame, for interlaced TV output",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_fields_get, RenderSettings_use_fields_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_field_order_items = {
//		new EnumPropertyItem(0, "EVEN_FIRST", 0, "Upper First", "Upper field first"),
//		new EnumPropertyItem(8192, "ODD_FIRST", 0, "Lower First", "Lower field first"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_field_order = new EnumPropertyRNA(
//		null, null,
//		-1, "field_order", 3, "Field Order",
//		"Order of video fields. Select which lines get rendered first, to create smooth motion for TV output",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_field_order_get, RenderSettings_field_order_set, null, rna_RenderSettings_field_order_items, 2, 0
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_fields_still = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_fields_still", 3, "Fields Still",
//		"Disable the time difference between fields",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_fields_still_get, RenderSettings_use_fields_still_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_shadows = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_shadows", 3, "Shadows",
//		"Calculate shadows while rendering",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_shadows_get, RenderSettings_use_shadows_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_envmaps = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_envmaps", 3, "Environment Maps",
//		"Calculate environment maps while rendering",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_envmaps_get, RenderSettings_use_envmaps_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_radiosity = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_radiosity", 3, "Radiosity",
//		"Calculate radiosity in a pre-process before rendering",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_radiosity_get, RenderSettings_use_radiosity_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_sss = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_sss", 3, "Subsurface Scattering",
//		"Calculate sub-surface scattering in materials rendering",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_sss_get, RenderSettings_use_sss_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_raytrace = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_raytrace", 3, "Raytracing",
//		"Pre-calculate the raytrace accelerator and render raytracing effects",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_raytrace_get, RenderSettings_use_raytrace_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_textures = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_textures", 3, "Textures",
//		"Use textures to affect material properties",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_textures_get, RenderSettings_use_textures_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_edge_enhance = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_edge_enhance", 3, "Edge",
//		"Create a toon outline around the edges of geometry",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_edge_enhance_get, RenderSettings_use_edge_enhance_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_edge_threshold = new IntPropertyRNA(
//		null, null,
//		-1, "edge_threshold", 3, "Edge Threshold",
//		"Threshold for drawing outlines on geometry edges",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_edge_threshold_get, RenderSettings_edge_threshold_set, null, null, null,
//		0, 255, 0, 255, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_edge_color = new FloatPropertyRNA(
//		null, null,
//		-1, "edge_color", 3, "Edge Color",
//		"",
//		0,
//		PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{3, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_edge_color_get, RenderSettings_edge_color_set, null, null, null, 0.0f, 1.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_threads = new IntPropertyRNA(
//		null, null,
//		-1, "threads", 3, "Threads",
//		"Number of CPU threads to use simultaneously while rendering (for multi-core/CPU systems)",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_threads_get, RenderSettings_threads_set, null, null, null,
//		1, 64, 1, 64, 1, 0, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_threads_mode_items = {
//		new EnumPropertyItem(0, "AUTO", 0, "Auto-detect", "Automatically determine the number of threads, based on CPUs"),
//		new EnumPropertyItem(524288, "FIXED", 0, "Fixed", "Manually determine the number of threads"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_threads_mode = new EnumPropertyRNA(
//		null, null,
//		-1, "threads_mode", 3, "Threads Mode",
//		"Determine the amount of render threads used",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_threads_mode_get, RenderSettings_threads_mode_set, null, rna_RenderSettings_threads_mode_items, 2, 0
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_motion_blur = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_motion_blur", 3, "Motion Blur",
//		"Use multi-sampled 3D scene motion blur",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_motion_blur_get, RenderSettings_use_motion_blur_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_motion_blur_samples = new IntPropertyRNA(
//		null, null,
//		-1, "motion_blur_samples", 3, "Motion Samples",
//		"Number of scene samples to take with motion blur",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_motion_blur_samples_get, RenderSettings_motion_blur_samples_set, null, null, null,
//		1, 32, 1, 32, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_motion_blur_shutter = new FloatPropertyRNA(
//		null, null,
//		-1, "motion_blur_shutter", 3, "Shutter",
//		"Time taken in frames between shutter open and close",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_motion_blur_shutter_get, RenderSettings_motion_blur_shutter_set, null, null, null, 0.0099999998f, 2.0f, 0.0099999998f, 10.0f, 1.0f, 0, 0.0f, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_border = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_border", 3, "Border",
//		"Render a user-defined border region, within the frame size. Note, this disables save_buffers and full_sample",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_border_get, RenderSettings_use_border_set, null, null, false, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_border_min_x = new FloatPropertyRNA(
//		null, null,
//		-1, "border_min_x", 3, "Border Minimum X",
//		"Sets minimum X value to for the render border",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_border_min_x_get, RenderSettings_border_min_x_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_border_min_y = new FloatPropertyRNA(
//		null, null,
//		-1, "border_min_y", 3, "Border Minimum Y",
//		"Sets minimum Y value for the render border",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_border_min_y_get, RenderSettings_border_min_y_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_border_max_x = new FloatPropertyRNA(
//		null, null,
//		-1, "border_max_x", 3, "Border Maximum X",
//		"Sets maximum X value for the render border",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_border_max_x_get, RenderSettings_border_max_x_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_border_max_y = new FloatPropertyRNA(
//		null, null,
//		-1, "border_max_y", 3, "Border Maximum Y",
//		"Sets maximum Y value for the render border",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_border_max_y_get, RenderSettings_border_max_y_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_crop_to_border = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_crop_to_border", 3, "Crop to Border",
//		"Crop the rendered frame to the defined border size",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_crop_to_border_get, RenderSettings_use_crop_to_border_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_placeholder = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_placeholder", 3, "Placeholders",
//		"Create empty placeholder files while rendering frames (similar to Unix \'touch\')",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_placeholder_get, RenderSettings_use_placeholder_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_overwrite = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_overwrite", 3, "Overwrite",
//		"Overwrite existing files while rendering",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_overwrite_get, RenderSettings_use_overwrite_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_compositing = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_compositing", 3, "Compositing",
//		"Process the render result through the compositing pipeline, if compositing nodes are enabled",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_compositing_get, RenderSettings_use_compositing_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_sequencer = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_sequencer", 3, "Sequencer",
//		"Process the render (and composited) result through the video sequence editor pipeline, if sequencer strips exist",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_sequencer_get, RenderSettings_use_sequencer_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_color_management = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_color_management", 3, "Color Management",
//		"Use linear workflow - gamma corrected imaging pipeline",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_RenderSettings_color_management_update, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_color_management_get, RenderSettings_use_color_management_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_file_extension = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_file_extension", 3, "File Extensions",
//		"Add the file format extensions to the rendered file name (eg: filename + .jpg)",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_file_extension_get, RenderSettings_use_file_extension_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_file_format_items = {
//		new EnumPropertyItem(0, "", 0, "Image", null),
//		new EnumPropertyItem(20, "BMP", 540, "BMP", ""),
//		new EnumPropertyItem(1, "IRIS", 540, "Iris", ""),
//		new EnumPropertyItem(17, "PNG", 540, "PNG", ""),
//		new EnumPropertyItem(4, "JPEG", 540, "JPEG", ""),
//		new EnumPropertyItem(0, "TARGA", 540, "Targa", ""),
//		new EnumPropertyItem(14, "TARGA_RAW", 540, "Targa Raw", ""),
//		new EnumPropertyItem(0, "", 0, " ", null),
//		new EnumPropertyItem(0, "", 0, "Movie", null),
//		new EnumPropertyItem(18, "AVICODEC", 541, "AVI Codec", ""),
//		new EnumPropertyItem(16, "AVI_JPEG", 541, "AVI JPEG", ""),
//		new EnumPropertyItem(15, "AVI_RAW", 541, "AVI Raw", ""),
//		new EnumPropertyItem(25, "FRAMESERVER", 542, "Frame Server", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_file_format = new EnumPropertyRNA(
//		null, null,
//		-1, "file_format", 3, "File Format",
//		"File format to save the rendered images as",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_file_format_get, RenderSettings_file_format_set, null, rna_RenderSettings_file_format_items, 13, 0
//	);
//
//	private static StringPropertyRNA rna_RenderSettings_file_extension = new StringPropertyRNA(
//		null, null,
//		-1, "file_extension", 0, "Extension",
//		"The file extension used for saving renders",
//		0,
//		PROP_STRING, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_file_extension_get, RenderSettings_file_extension_length, null, 0, ""
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_is_movie_format = new BooleanPropertyRNA(
//		null, null,
//		-1, "is_movie_format", 2, "Movie Format",
//		"When true the format is a movie",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_is_movie_format_get, null, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_free_image_textures = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_free_image_textures", 3, "Free Image Textures",
//		"Free all image texture from memory after render, to save memory before compositing",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_free_image_textures_get, RenderSettings_use_free_image_textures_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_free_unused_nodes = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_free_unused_nodes", 3, "Free Unused Nodes",
//		"Free Nodes that are not used while compositing, to save memory",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_free_unused_nodes_get, RenderSettings_use_free_unused_nodes_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_save_buffers = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_save_buffers", 3, "Save Buffers",
//		"Save tiles for all RenderLayers and SceneNodes to files in the temp directory (saves memory, required for Full Sample)",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_save_buffers_get, RenderSettings_use_save_buffers_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_full_sample = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_full_sample", 3, "Full Sample",
//		"Save for every anti-aliasing sample the entire RenderLayer results. This solves anti-aliasing issues with compositing",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_full_sample_get, RenderSettings_use_full_sample_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_backbuf = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_backbuf", 3, "Back Buffer",
//		"Render backbuffer image",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_backbuf_get, RenderSettings_use_backbuf_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_display_mode_items = {
//		new EnumPropertyItem(0, "SCREEN", 0, "Full Screen", "Images are rendered in full Screen"),
//		new EnumPropertyItem(1, "AREA", 0, "Image Editor", "Images are rendered in Image Editor"),
//		new EnumPropertyItem(2, "WINDOW", 0, "New Window", "Images are rendered in new Window"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_display_mode = new EnumPropertyRNA(
//		null, null,
//		-1, "display_mode", 3, "Display",
//		"Select where rendered images will be displayed",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_display_mode_get, RenderSettings_display_mode_set, null, rna_RenderSettings_display_mode_items, 3, 0
//	);
//
//	private static StringPropertyRNA rna_RenderSettings_filepath = new StringPropertyRNA(
//		null, null,
//		-1, "filepath", 1, "Output Path",
//		"Directory/name to save animations, # characters defines the position and length of frame numbers",
//		0,
//		PROP_STRING, PROP_FILEPATH|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_filepath_get, RenderSettings_filepath_length, RenderSettings_filepath_set, 0, ""
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_bake_type_items = {
//		new EnumPropertyItem(1, "FULL", 0, "Full Render", ""),
//		new EnumPropertyItem(2, "AO", 0, "Ambient Occlusion", ""),
//		new EnumPropertyItem(6, "SHADOW", 0, "Shadow", ""),
//		new EnumPropertyItem(3, "NORMALS", 0, "Normals", ""),
//		new EnumPropertyItem(4, "TEXTURE", 0, "Textures", ""),
//		new EnumPropertyItem(5, "DISPLACEMENT", 0, "Displacement", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_bake_type = new EnumPropertyRNA(
//		null, null,
//		-1, "bake_type", 3, "Bake Mode",
//		"Choose shading information to bake into the image",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_type_get, RenderSettings_bake_type_set, null, rna_RenderSettings_bake_type_items, 6, 1
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_bake_normal_space_items = {
//		new EnumPropertyItem(0, "CAMERA", 0, "Camera", ""),
//		new EnumPropertyItem(1, "WORLD", 0, "World", ""),
//		new EnumPropertyItem(2, "OBJECT", 0, "Object", ""),
//		new EnumPropertyItem(3, "TANGENT", 0, "Tangent", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_bake_normal_space = new EnumPropertyRNA(
//		null, null,
//		-1, "bake_normal_space", 3, "Normal Space",
//		"Choose normal space for baking",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_normal_space_get, RenderSettings_bake_normal_space_set, null, rna_RenderSettings_bake_normal_space_items, 4, 0
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_bake_quad_split_items = {
//		new EnumPropertyItem(0, "AUTO", 0, "Automatic", "Split quads to give the least distortion while baking"),
//		new EnumPropertyItem(1, "FIXED", 0, "Fixed", "Split quads predictably (0,1,2) (0,2,3)"),
//		new EnumPropertyItem(2, "FIXED_ALT", 0, "Fixed Alternate", "Split quads predictably (1,2,3) (1,3,0)"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_bake_quad_split = new EnumPropertyRNA(
//		null, null,
//		-1, "bake_quad_split", 3, "Quad Split",
//		"Choose the method used to split a quad into 2 triangles for baking",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_quad_split_get, RenderSettings_bake_quad_split_set, null, rna_RenderSettings_bake_quad_split_items, 3, 0
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_bake_aa_mode_items = {
//		new EnumPropertyItem(5, "5", 0, "5", ""),
//		new EnumPropertyItem(8, "8", 0, "8", ""),
//		new EnumPropertyItem(11, "11", 0, "11", ""),
//		new EnumPropertyItem(16, "16", 0, "16", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_bake_aa_mode = new EnumPropertyRNA(
//		null, null,
//		-1, "bake_aa_mode", 3, "Anti-Aliasing Level",
//		"",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_aa_mode_get, RenderSettings_bake_aa_mode_set, null, rna_RenderSettings_bake_aa_mode_items, 4, 5
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_bake_selected_to_active = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_bake_selected_to_active", 3, "Selected to Active",
//		"Bake shading on the surface of selected objects to the active object",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_bake_selected_to_active_get, RenderSettings_use_bake_selected_to_active_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_bake_normalize = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_bake_normalize", 3, "Normalized",
//		"With displacement normalize to the distance, with ambient occlusion normalize without using material settings",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_bake_normalize_get, RenderSettings_use_bake_normalize_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_bake_clear = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_bake_clear", 3, "Clear",
//		"Clear Images before baking",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_bake_clear_get, RenderSettings_use_bake_clear_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_bake_antialiasing = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_bake_antialiasing", 3, "Anti-Aliasing",
//		"Enables Anti-aliasing",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_bake_antialiasing_get, RenderSettings_use_bake_antialiasing_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_bake_margin = new IntPropertyRNA(
//		null, null,
//		-1, "bake_margin", 3, "Margin",
//		"Amount of pixels to extend the baked result with, as post process filter",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_margin_get, RenderSettings_bake_margin_set, null, null, null,
//		0, 32, 0, 32, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_bake_distance = new FloatPropertyRNA(
//		null, null,
//		-1, "bake_distance", 3, "Distance",
//		"Maximum distance from active object to other object (in blender units",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_distance_get, RenderSettings_bake_distance_set, null, null, null, 0.0f, 1000.0f, 0.0f, 1000.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_bake_bias = new FloatPropertyRNA(
//		null, null,
//		-1, "bake_bias", 3, "Bias",
//		"Bias towards faces further away from the object (in blender units)",
//		0,
//		PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_bake_bias_get, RenderSettings_bake_bias_set, null, null, null, 0.0f, 1000.0f, 0.0f, 1000.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_time = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_time", 3, "Stamp Time",
//		"Include the render frame as HH:MM:SS.FF in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_time_get, RenderSettings_use_stamp_time_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_date = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_date", 3, "Stamp Date",
//		"Include the current date in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_date_get, RenderSettings_use_stamp_date_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_frame = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_frame", 3, "Stamp Frame",
//		"Include the frame number in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_frame_get, RenderSettings_use_stamp_frame_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_camera = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_camera", 3, "Stamp Camera",
//		"Include the name of the active camera in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_camera_get, RenderSettings_use_stamp_camera_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_scene = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_scene", 3, "Stamp Scene",
//		"Include the name of the active scene in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_scene_get, RenderSettings_use_stamp_scene_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_note = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_note", 3, "Stamp Note",
//		"Include a custom note in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_note_get, RenderSettings_use_stamp_note_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_marker = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_marker", 3, "Stamp Marker",
//		"Include the name of the last marker in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_marker_get, RenderSettings_use_stamp_marker_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_filename = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_filename", 3, "Stamp Filename",
//		"Include the filename of the .blend file in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_filename_get, RenderSettings_use_stamp_filename_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_sequencer_strip = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_sequencer_strip", 3, "Stamp Sequence Strip",
//		"Include the name of the foreground sequence strip in image metadata",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_sequencer_strip_get, RenderSettings_use_stamp_sequencer_strip_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp_render_time = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp_render_time", 3, "Stamp Render Time",
//		"Include the render time in the stamp image",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_render_time_get, RenderSettings_use_stamp_render_time_set, null, null, false, null
//	);
//
//	private static StringPropertyRNA rna_RenderSettings_stamp_note_text = new StringPropertyRNA(
//		null, null,
//		-1, "stamp_note_text", 1, "Stamp Note Text",
//		"Custom text to appear in the stamp note",
//		0,
//		PROP_STRING, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_stamp_note_text_get, RenderSettings_stamp_note_text_length, RenderSettings_stamp_note_text_set, 0, ""
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_stamp = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_stamp", 3, "Render Stamp",
//		"Render the stamp info text in the rendered image",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_stamp_get, RenderSettings_use_stamp_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_stamp_font_size = new IntPropertyRNA(
//		null, null,
//		-1, "stamp_font_size", 3, "Font Size",
//		"Size of the font used when rendering stamp text",
//		0,
//		PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_stamp_font_size_get, RenderSettings_stamp_font_size_set, null, null, null,
//		8, 64, 8, 64, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_stamp_foreground = new FloatPropertyRNA(
//		null, null,
//		-1, "stamp_foreground", 3, "Stamp Text Color",
//		"Color to use for stamp text",
//		0,
//		PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{4, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_stamp_foreground_get, RenderSettings_stamp_foreground_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_stamp_background = new FloatPropertyRNA(
//		null, null,
//		-1, "stamp_background", 3, "Stamp Background",
//		"Color to use behind stamp text",
//		0,
//		PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{4, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_stamp_background_get, RenderSettings_stamp_background_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_sequencer_gl_preview = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_sequencer_gl_preview", 3, "Sequencer OpenGL",
//		"",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_sequencer_gl_preview_get, RenderSettings_use_sequencer_gl_preview_set, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_sequencer_gl_render = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_sequencer_gl_render", 3, "Sequencer OpenGL",
//		"",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_sequencer_gl_render_get, RenderSettings_use_sequencer_gl_render_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_sequencer_gl_preview_items = {
//		new EnumPropertyItem(1, "BOUNDBOX", 468, "Bounding Box", "Display the object\'s local bounding boxes only"),
//		new EnumPropertyItem(2, "WIREFRAME", 469, "Wireframe", "Display the object as wire edges"),
//		new EnumPropertyItem(3, "SOLID", 470, "Solid", "Display the object solid, lit with default OpenGL lights"),
//		new EnumPropertyItem(5, "TEXTURED", 472, "Textured", "Display the object solid, with face-assigned textures"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_sequencer_gl_preview = new EnumPropertyRNA(
//		null, null,
//		-1, "sequencer_gl_preview", 3, "Sequencer Preview Shading",
//		"Method to draw in the sequencer view",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_sequencer_gl_preview_get, RenderSettings_sequencer_gl_preview_set, null, rna_RenderSettings_sequencer_gl_preview_items, 4, 1
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_sequencer_gl_render_items = {
//		new EnumPropertyItem(1, "BOUNDBOX", 468, "Bounding Box", "Display the object\'s local bounding boxes only"),
//		new EnumPropertyItem(2, "WIREFRAME", 469, "Wireframe", "Display the object as wire edges"),
//		new EnumPropertyItem(3, "SOLID", 470, "Solid", "Display the object solid, lit with default OpenGL lights"),
//		new EnumPropertyItem(5, "TEXTURED", 472, "Textured", "Display the object solid, with face-assigned textures"),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_sequencer_gl_render = new EnumPropertyRNA(
//		null, null,
//		-1, "sequencer_gl_render", 3, "Sequencer Preview Shading",
//		"Method to draw in the sequencer view",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_sequencer_gl_render_get, RenderSettings_sequencer_gl_render_set, null, rna_RenderSettings_sequencer_gl_render_items, 4, 1
//	);
//
//	private static CollectionPropertyRNA rna_RenderSettings_layers = new CollectionPropertyRNA(
//		null, null,
//		-1, "layers", 0, "Render Layers",
//		"",
//		0,
//		PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, RnaRenderLayers.RNA_RenderLayers,
//		RenderSettings_layers_begin, null, RenderSettings_layers_end, RenderSettings_layers_get, null, null, null, RnaSceneRenderLayer.RNA_SceneRenderLayer
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_single_layer = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_single_layer", 4099, "Single Layer",
//		"Only render the active layer",
//		42,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 67371008, null, null,
//		0, -1, null,
//		RenderSettings_use_single_layer_get, RenderSettings_use_single_layer_set, null, null, false, null
//	);
//
//	private static EnumPropertyItem[] rna_RenderSettings_engine_items = {
//		new EnumPropertyItem(0, "BLENDER_RENDER", 0, "Blender Render", ""),
//		new EnumPropertyItem(0, null, 0, null, null)
//	};
//
//	private static EnumPropertyRNA rna_RenderSettings_engine = new EnumPropertyRNA(
//		null, null,
//		-1, "engine", 3, "Engine",
//		"Engine to use for rendering",
//		0,
//		PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 33554432, null, null,
//		0, -1, null,
//		RenderSettings_engine_get, RenderSettings_engine_set, rna_RenderSettings_engine_itemf, rna_RenderSettings_engine_items, 1, 0
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_has_multiple_engines = new BooleanPropertyRNA(
//		null, null,
//		-1, "has_multiple_engines", 2, "Multiple Engines",
//		"More than one rendering engine is available",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_has_multiple_engines_get, null, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_game_engine = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_game_engine", 2, "Use Game Engine",
//		"Current rendering engine is a game engine",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_game_engine_get, null, null, null, false, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_simplify = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_simplify", 3, "Use Simplify",
//		"Enable simplification of scene for quicker preview renders",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_use_simplify_update, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_simplify_get, RenderSettings_use_simplify_set, null, null, false, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_simplify_subdivision = new IntPropertyRNA(
//		null, null,
//		-1, "simplify_subdivision", 3, "Simplify Subdivision",
//		"Global maximum subdivision level",
//		0,
//		PROP_INT, PROP_UNSIGNED|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_simplify_update, 0, null, null,
//		0, -1, null,
//		RenderSettings_simplify_subdivision_get, RenderSettings_simplify_subdivision_set, null, null, null,
//		0, 6, 0, INT_MAX, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_simplify_child_particles = new FloatPropertyRNA(
//		null, null,
//		-1, "simplify_child_particles", 3, "Simplify Child Particles",
//		"Global child particles percentage",
//		0,
//		PROP_FLOAT, PROP_FACTOR|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_simplify_update, 0, null, null,
//		0, -1, null,
//		RenderSettings_simplify_child_particles_get, RenderSettings_simplify_child_particles_set, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
//	);
//
//	private static IntPropertyRNA rna_RenderSettings_simplify_shadow_samples = new IntPropertyRNA(
//		null, null,
//		-1, "simplify_shadow_samples", 3, "Simplify Shadow Samples",
//		"Global maximum shadow samples",
//		0,
//		PROP_INT, PROP_UNSIGNED|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_simplify_update, 0, null, null,
//		0, -1, null,
//		RenderSettings_simplify_shadow_samples_get, RenderSettings_simplify_shadow_samples_set, null, null, null,
//		1, 16, 0, INT_MAX, 1, 0, null
//	);
//
//	private static FloatPropertyRNA rna_RenderSettings_simplify_ao_sss = new FloatPropertyRNA(
//		null, null,
//		-1, "simplify_ao_sss", 3, "Simplify AO and SSS",
//		"Global approximate AA and SSS quality factor",
//		0,
//		PROP_FLOAT, PROP_FACTOR|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		rna_Scene_simplify_update, 0, null, null,
//		0, -1, null,
//		RenderSettings_simplify_ao_sss_get, RenderSettings_simplify_ao_sss_set, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
//	);
//
//	private static BooleanPropertyRNA rna_RenderSettings_use_simplify_triangulate = new BooleanPropertyRNA(
//		null, null,
//		-1, "use_simplify_triangulate", 3, "Skip Quad to Triangles",
//		"Disables non-planer quads being triangulated",
//		0,
//		PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//		null, 0, null, null,
//		0, -1, null,
//		RenderSettings_use_simplify_triangulate_get, RenderSettings_use_simplify_triangulate_set, null, null, false, null
//	);
//
//	static { ListBase tmp = new ListBase();
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_rna_properties);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_rna_type);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_color_mode);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_x);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_y);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_percentage);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_parts_x);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_parts_y);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_aspect_x);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_aspect_y);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_quality);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_tiff_16bit);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_cineon_log);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_black);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_white);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_gamma);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_ffmpeg_format);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_fps);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_fps_base);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_frame_map_old);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_frame_map_new);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_dither_intensity);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_filter_type);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_filter_size);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_alpha_mode);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_octree_resolution);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_raytrace_method);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_instances);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_local_coords);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_antialiasing);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_antialiasing_samples);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_fields);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_field_order);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_fields_still);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_shadows);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_envmaps);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_radiosity);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sss);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_raytrace);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_textures);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_edge_enhance);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_edge_threshold);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_edge_color);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_threads);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_threads_mode);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_motion_blur);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_motion_blur_samples);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_motion_blur_shutter);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_border);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_min_x);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_min_y);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_max_x);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_max_y);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_crop_to_border);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_placeholder);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_overwrite);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_compositing);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_color_management);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_file_extension);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_format);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_extension);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_is_movie_format);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_free_image_textures);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_free_unused_nodes);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_save_buffers);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_full_sample);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_backbuf);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_display_mode);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_filepath);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_type);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_normal_space);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_quad_split);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_aa_mode);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_selected_to_active);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_normalize);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_clear);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_antialiasing);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_margin);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_distance);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_bias);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_time);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_date);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_frame);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_camera);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_scene);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_note);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_marker);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_filename);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_sequencer_strip);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_render_time);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_note_text);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_font_size);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_foreground);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_background);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer_gl_preview);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer_gl_render);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_sequencer_gl_preview);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_sequencer_gl_render);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_layers);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_single_layer);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_engine);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_has_multiple_engines);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_game_engine);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_simplify);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_subdivision);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_child_particles);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_shadow_samples);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_ao_sss);
//		ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_simplify_triangulate);
//	}
//
//	static { ListBase tmp = new ListBase();
//	}
//
//	public static StructRNA RNA_RenderSettings = new StructRNA(
//		RnaRenderLayers.RNA_RenderLayers, RnaToolSettings.RNA_ToolSettings,
//		null,
//		rna_RenderSettings_rna_properties, rna_RenderSettings_use_simplify_triangulate,
//		null,null,
//		"RenderSettings", 0, "Render Data", "Rendering settings for a Scene datablock",
//		17,
//		null, rna_RenderSettings_rna_properties,
//		null,
//		RnaScene.RNA_Scene,
//		null,
//		null,
//		null,
//		null,
//		null,
//		null, null
//	);
//
//}


/* Automatically generated struct definitions for the Data API.
   Do not edit manually, changes will be overwritten.           */

package blender.makesrna.srna;

import blender.makesdna.sdna.*;

import static blender.makesrna.RnaRna.*;
import static blender.makesrna.RnaAccess.*;
import static blender.makesrna.RnaDefine.*;
import static blender.makesrna.RNATypes.*;
import blender.makesrna.rna_internal_types.*;
import blender.blenlib.*;
import blender.blenkernel.*;

import static blender.makesrna.RnaSceneUtil.*;
import static blender.makesrna.RnaSceneApi.*;

public class RnaRenderSettings extends RnaStruct {
	
public RnaRenderLayers getLayers() { return new RnaRenderLayers(ptr); }

/* Autogenerated Functions */

public RnaRenderSettings(PointerRNA ptr) { super(ptr); }

private static PropCollectionGetFunc RenderSettings_rna_properties_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_builtin_properties_get.get(iter);
}};

private static PropCollectionBeginFunc RenderSettings_rna_properties_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_RenderSettings_rna_properties;

	rna_builtin_properties_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= RenderSettings_rna_properties_get.get(iter);
}};

private static PropCollectionNextFunc RenderSettings_rna_properties_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_builtin_properties_next.next(iter);

	if(iter.valid)
		iter.ptr= RenderSettings_rna_properties_get.get(iter);
}};

private static PropCollectionEndFunc RenderSettings_rna_properties_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropPointerGetFunc RenderSettings_rna_type_get = new PropPointerGetFunc() {
public PointerRNA getPtr(PointerRNA ptr)
{
	return rna_builtin_type_get.getPtr(ptr);
}};

public int getColor_mode() { return RenderSettings_color_mode_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_color_mode_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.planes) & 56);
}};

public void setColor_mode(int value) { RenderSettings_color_mode_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_color_mode_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.planes &= ~56;
	data.planes |= value;
}};

public int getResolution_x() { return RenderSettings_resolution_x_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_resolution_x_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.xsch);
}};

public void setResolution_x(int value) { RenderSettings_resolution_x_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_resolution_x_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 4, 10000);
	data.xsch= castMe(value, data.xsch);
}};

public int getResolution_y() { return RenderSettings_resolution_y_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_resolution_y_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.ysch);
}};

public void setResolution_y(int value) { RenderSettings_resolution_y_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_resolution_y_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 4, 10000);
	data.ysch= castMe(value, data.ysch);
}};

public int getResolution_percentage() { return RenderSettings_resolution_percentage_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_resolution_percentage_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.size);
}};

public void setResolution_percentage(int value) { RenderSettings_resolution_percentage_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_resolution_percentage_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
	data.size= castMe(value, data.size);
}};

public int getParts_x() { return RenderSettings_parts_x_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_parts_x_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.xparts);
}};

public void setParts_x(int value) { RenderSettings_parts_x_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_parts_x_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 512);
	data.xparts= castMe(value, data.xparts);
}};

public int getParts_y() { return RenderSettings_parts_y_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_parts_y_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.yparts);
}};

public void setParts_y(int value) { RenderSettings_parts_y_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_parts_y_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 512);
	data.yparts= castMe(value, data.yparts);
}};

public float getPixel_aspect_x() { return RenderSettings_pixel_aspect_x_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_pixel_aspect_x_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.xasp);
}};

public void setPixel_aspect_x(float value) { RenderSettings_pixel_aspect_x_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_pixel_aspect_x_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1.0f, 200.0f);
	data.xasp= value;
}};

public float getPixel_aspect_y() { return RenderSettings_pixel_aspect_y_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_pixel_aspect_y_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.yasp);
}};

public void setPixel_aspect_y(float value) { RenderSettings_pixel_aspect_y_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_pixel_aspect_y_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1.0f, 200.0f);
	data.yasp= value;
}};

public int getFile_quality() { return RenderSettings_file_quality_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_file_quality_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.quality);
}};

public void setFile_quality(int value) { RenderSettings_file_quality_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_file_quality_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, 100);
	data.quality= castMe(value, data.quality);
}};

public boolean getUse_tiff_16bit() { return RenderSettings_use_tiff_16bit_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_tiff_16bit_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.subimtype) & 16) != 0);
}};

public void setUse_tiff_16bit(boolean value) { RenderSettings_use_tiff_16bit_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_tiff_16bit_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.subimtype |= 16;
	else data.subimtype &= ~16;
}};

public boolean getUse_cineon_log() { return RenderSettings_use_cineon_log_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_cineon_log_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.subimtype) & 8) != 0);
}};

public void setUse_cineon_log(boolean value) { RenderSettings_use_cineon_log_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_cineon_log_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.subimtype |= 8;
	else data.subimtype &= ~8;
}};

public int getCineon_black() { return RenderSettings_cineon_black_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_cineon_black_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.cineonblack);
}};

public void setCineon_black(int value) { RenderSettings_cineon_black_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_cineon_black_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, 1024);
	data.cineonblack= castMe(value, data.cineonblack);
}};

public int getCineon_white() { return RenderSettings_cineon_white_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_cineon_white_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.cineonwhite);
}};

public void setCineon_white(int value) { RenderSettings_cineon_white_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_cineon_white_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, 1024);
	data.cineonwhite= castMe(value, data.cineonwhite);
}};

public float getCineon_gamma() { return RenderSettings_cineon_gamma_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_cineon_gamma_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.cineongamma);
}};

public void setCineon_gamma(float value) { RenderSettings_cineon_gamma_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_cineon_gamma_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 10.0f);
	data.cineongamma= value;
}};

public int getFfmpeg_format() { return RenderSettings_ffmpeg_format_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_ffmpeg_format_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.ffcodecdata.type) & 15);
}};

public void setFfmpeg_format(int value) { RenderSettings_ffmpeg_format_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_ffmpeg_format_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.ffcodecdata.type &= ~15;
	data.ffcodecdata.type |= value;
}};

public int getFps() { return RenderSettings_fps_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_fps_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.frs_sec);
}};

public void setFps(int value) { RenderSettings_fps_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_fps_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 120);
	data.frs_sec= castMe(value, data.frs_sec);
}};

public float getFps_base() { return RenderSettings_fps_base_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_fps_base_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.frs_sec_base);
}};

public void setFps_base(float value) { RenderSettings_fps_base_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_fps_base_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.1000000015f, 120.0f);
	data.frs_sec_base= value;
}};

public int getFrame_map_old() { return RenderSettings_frame_map_old_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_frame_map_old_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.framapto);
}};

public void setFrame_map_old(int value) { RenderSettings_frame_map_old_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_frame_map_old_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 900);
	data.framapto= castMe(value, data.framapto);
}};

public int getFrame_map_new() { return RenderSettings_frame_map_new_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_frame_map_new_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.images);
}};

public void setFrame_map_new(int value) { RenderSettings_frame_map_new_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_frame_map_new_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 900);
	data.images= castMe(value, data.images);
}};

public float getDither_intensity() { return RenderSettings_dither_intensity_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_dither_intensity_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.dither_intensity);
}};

public void setDither_intensity(float value) { RenderSettings_dither_intensity_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_dither_intensity_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 2.0f);
	data.dither_intensity= value;
}};

public int getPixel_filter_type() { return RenderSettings_pixel_filter_type_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_pixel_filter_type_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.filtertype);
}};

public void setPixel_filter_type(int value) { RenderSettings_pixel_filter_type_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_pixel_filter_type_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.filtertype= castMe(value, data.filtertype);
}};

public float getFilter_size() { return RenderSettings_filter_size_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_filter_size_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.gauss);
}};

public void setFilter_size(float value) { RenderSettings_filter_size_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_filter_size_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.5000000000f, 1.5000000000f);
	data.gauss= value;
}};

public int getAlpha_mode() { return RenderSettings_alpha_mode_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_alpha_mode_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.alphamode);
}};

public void setAlpha_mode(int value) { RenderSettings_alpha_mode_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_alpha_mode_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.alphamode= castMe(value, data.alphamode);
}};

public int getOctree_resolution() { return RenderSettings_octree_resolution_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_octree_resolution_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.ocres);
}};

public void setOctree_resolution(int value) { RenderSettings_octree_resolution_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_octree_resolution_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.ocres= castMe(value, data.ocres);
}};

public int getRaytrace_method() { return RenderSettings_raytrace_method_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_raytrace_method_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.raytrace_structure);
}};

public void setRaytrace_method(int value) { RenderSettings_raytrace_method_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_raytrace_method_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.raytrace_structure= castMe(value, data.raytrace_structure);
}};

public boolean getUse_instances() { return RenderSettings_use_instances_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_instances_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.raytrace_options) & 2) != 0);
}};

public void setUse_instances(boolean value) { RenderSettings_use_instances_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_instances_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.raytrace_options |= 2;
	else data.raytrace_options &= ~2;
}};

public boolean getUse_local_coords() { return RenderSettings_use_local_coords_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_local_coords_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.raytrace_options) & 1) != 0);
}};

public void setUse_local_coords(boolean value) { RenderSettings_use_local_coords_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_local_coords_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.raytrace_options |= 1;
	else data.raytrace_options &= ~1;
}};

public boolean getUse_antialiasing() { return RenderSettings_use_antialiasing_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_antialiasing_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 1) != 0);
}};

public void setUse_antialiasing(boolean value) { RenderSettings_use_antialiasing_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_antialiasing_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 1;
	else data.mode &= ~1;
}};

public int getAntialiasing_samples() { return RenderSettings_antialiasing_samples_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_antialiasing_samples_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.osa);
}};

public void setAntialiasing_samples(int value) { RenderSettings_antialiasing_samples_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_antialiasing_samples_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.osa= castMe(value, data.osa);
}};

public boolean getUse_fields() { return RenderSettings_use_fields_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_fields_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 64) != 0);
}};

public void setUse_fields(boolean value) { RenderSettings_use_fields_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_fields_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 64;
	else data.mode &= ~64;
}};

public int getField_order() { return RenderSettings_field_order_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_field_order_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.mode) & 8192);
}};

public void setField_order(int value) { RenderSettings_field_order_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_field_order_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.mode &= ~8192;
	data.mode |= value;
}};

public boolean getUse_fields_still() { return RenderSettings_use_fields_still_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_fields_still_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 128) != 0);
}};

public void setUse_fields_still(boolean value) { RenderSettings_use_fields_still_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_fields_still_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 128;
	else data.mode &= ~128;
}};

public boolean getUse_shadows() { return RenderSettings_use_shadows_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_shadows_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 2) != 0);
}};

public void setUse_shadows(boolean value) { RenderSettings_use_shadows_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_shadows_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 2;
	else data.mode &= ~2;
}};

public boolean getUse_envmaps() { return RenderSettings_use_envmaps_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_envmaps_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 16) != 0);
}};

public void setUse_envmaps(boolean value) { RenderSettings_use_envmaps_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_envmaps_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 16;
	else data.mode &= ~16;
}};

public boolean getUse_radiosity() { return RenderSettings_use_radiosity_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_radiosity_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 256) != 0);
}};

public void setUse_radiosity(boolean value) { RenderSettings_use_radiosity_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_radiosity_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 256;
	else data.mode &= ~256;
}};

public boolean getUse_sss() { return RenderSettings_use_sss_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_sss_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 2097152) != 0);
}};

public void setUse_sss(boolean value) { RenderSettings_use_sss_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_sss_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 2097152;
	else data.mode &= ~2097152;
}};

public boolean getUse_raytrace() { return RenderSettings_use_raytrace_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_raytrace_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 65536) != 0);
}};

public void setUse_raytrace(boolean value) { RenderSettings_use_raytrace_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_raytrace_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 65536;
	else data.mode &= ~65536;
}};

public boolean getUse_textures() { return RenderSettings_use_textures_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_textures_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return !(((data.scemode) & 8192) != 0);
}};

public void setUse_textures(boolean value) { RenderSettings_use_textures_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_textures_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(!value) data.scemode |= 8192;
	else data.scemode &= ~8192;
}};

public boolean getUse_edge_enhance() { return RenderSettings_use_edge_enhance_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_edge_enhance_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 32) != 0);
}};

public void setUse_edge_enhance(boolean value) { RenderSettings_use_edge_enhance_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_edge_enhance_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 32;
	else data.mode &= ~32;
}};

public int getEdge_threshold() { return RenderSettings_edge_threshold_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_edge_threshold_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.edgeint);
}};

public void setEdge_threshold(int value) { RenderSettings_edge_threshold_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_edge_threshold_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, 255);
	data.edgeint= castMe(value, data.edgeint);
}};

public float getEdge_color() { return RenderSettings_edge_color_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_edge_color_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.edgeR);
}};

public void setEdge_color(float value) { RenderSettings_edge_color_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_edge_color_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.edgeR= value;
}};

public int getThreads() { return RenderSettings_threads_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_threads_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	return rna_RenderSettings_threads_get.getInt(ptr);
}};

public void setThreads(int value) { RenderSettings_threads_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_threads_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 64);
	data.threads= castMe(value, data.threads);
}};

public int getThreads_mode() { return RenderSettings_threads_mode_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_threads_mode_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.mode) & 524288);
}};

public void setThreads_mode(int value) { RenderSettings_threads_mode_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_threads_mode_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.mode &= ~524288;
	data.mode |= value;
}};

public boolean getUse_motion_blur() { return RenderSettings_use_motion_blur_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_motion_blur_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 16384) != 0);
}};

public void setUse_motion_blur(boolean value) { RenderSettings_use_motion_blur_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_motion_blur_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 16384;
	else data.mode &= ~16384;
}};

public int getMotion_blur_samples() { return RenderSettings_motion_blur_samples_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_motion_blur_samples_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.mblur_samples);
}};

public void setMotion_blur_samples(int value) { RenderSettings_motion_blur_samples_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_motion_blur_samples_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 1, 32);
	data.mblur_samples= castMe(value, data.mblur_samples);
}};

public float getMotion_blur_shutter() { return RenderSettings_motion_blur_shutter_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_motion_blur_shutter_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.blurfac);
}};

public void setMotion_blur_shutter(float value) { RenderSettings_motion_blur_shutter_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_motion_blur_shutter_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0099999998f, 10.0f);
	data.blurfac= value;
}};

public boolean getUse_border() { return RenderSettings_use_border_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_border_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 512) != 0);
}};

public void setUse_border(boolean value) { RenderSettings_use_border_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_border_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 512;
	else data.mode &= ~512;
}};

public float getBorder_min_x() { return RenderSettings_border_min_x_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_border_min_x_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.border.xmin);
}};

public void setBorder_min_x(float value) { RenderSettings_border_min_x_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_border_min_x_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
	data.border.xmin= value;
}};

public float getBorder_min_y() { return RenderSettings_border_min_y_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_border_min_y_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.border.ymin);
}};

public void setBorder_min_y(float value) { RenderSettings_border_min_y_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_border_min_y_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
	data.border.ymin= value;
}};

public float getBorder_max_x() { return RenderSettings_border_max_x_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_border_max_x_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.border.xmax);
}};

public void setBorder_max_x(float value) { RenderSettings_border_max_x_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_border_max_x_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
	data.border.xmax= value;
}};

public float getBorder_max_y() { return RenderSettings_border_max_y_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_border_max_y_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.border.ymax);
}};

public void setBorder_max_y(float value) { RenderSettings_border_max_y_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_border_max_y_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
	data.border.ymax= value;
}};

public boolean getUse_crop_to_border() { return RenderSettings_use_crop_to_border_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_crop_to_border_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 2048) != 0);
}};

public void setUse_crop_to_border(boolean value) { RenderSettings_use_crop_to_border_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_crop_to_border_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 2048;
	else data.mode &= ~2048;
}};

public boolean getUse_placeholder() { return RenderSettings_use_placeholder_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_placeholder_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 8388608) != 0);
}};

public void setUse_placeholder(boolean value) { RenderSettings_use_placeholder_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_placeholder_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 8388608;
	else data.mode &= ~8388608;
}};

public boolean getUse_overwrite() { return RenderSettings_use_overwrite_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_overwrite_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return !(((data.mode) & 4194304) != 0);
}};

public void setUse_overwrite(boolean value) { RenderSettings_use_overwrite_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_overwrite_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(!value) data.mode |= 4194304;
	else data.mode &= ~4194304;
}};

public boolean getUse_compositing() { return RenderSettings_use_compositing_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_compositing_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 64) != 0);
}};

public void setUse_compositing(boolean value) { RenderSettings_use_compositing_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_compositing_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 64;
	else data.scemode &= ~64;
}};

public boolean getUse_sequencer() { return RenderSettings_use_sequencer_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_sequencer_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 1) != 0);
}};

public void setUse_sequencer(boolean value) { RenderSettings_use_sequencer_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_sequencer_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 1;
	else data.scemode &= ~1;
}};

public boolean getUse_color_management() { return RenderSettings_use_color_management_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_color_management_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.color_mgt_flag) & 1) != 0);
}};

public void setUse_color_management(boolean value) { RenderSettings_use_color_management_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_color_management_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.color_mgt_flag |= 1;
	else data.color_mgt_flag &= ~1;
}};

public boolean getUse_file_extension() { return RenderSettings_use_file_extension_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_file_extension_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 16) != 0);
}};

public void setUse_file_extension(boolean value) { RenderSettings_use_file_extension_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_file_extension_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 16;
	else data.scemode &= ~16;
}};

public int getFile_format() { return RenderSettings_file_format_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_file_format_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.imtype);
}};

public void setFile_format(int value) { RenderSettings_file_format_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_file_format_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	rna_RenderSettings_file_format_set.setEnum(ptr, value);
}};

public String getFile_extension() { RenderSettings_file_extension_get.getStr(ptr, DEFAULT_BUF,0); return StringUtil.toJString(DEFAULT_BUF,0);}
private static PropStringGetFunc RenderSettings_file_extension_get = new PropStringGetFunc() {
public void getStr(PointerRNA ptr, byte[] value, int offset)
{
	rna_SceneRender_file_ext_get.getStr(ptr, value, offset);
}};

private static PropStringLengthFunc RenderSettings_file_extension_length = new PropStringLengthFunc() {
public int lenStr(PointerRNA ptr)
{
	return rna_SceneRender_file_ext_length.lenStr(ptr);
}};

public boolean getIs_movie_format() { return RenderSettings_is_movie_format_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_is_movie_format_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_RenderSettings_is_movie_fomat_get.getBool(ptr);
}};

public boolean getUse_free_image_textures() { return RenderSettings_use_free_image_textures_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_free_image_textures_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 256) != 0);
}};

public void setUse_free_image_textures(boolean value) { RenderSettings_use_free_image_textures_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_free_image_textures_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 256;
	else data.scemode &= ~256;
}};

public boolean getUse_free_unused_nodes() { return RenderSettings_use_free_unused_nodes_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_free_unused_nodes_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 2048) != 0);
}};

public void setUse_free_unused_nodes(boolean value) { RenderSettings_use_free_unused_nodes_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_free_unused_nodes_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 2048;
	else data.scemode &= ~2048;
}};

public boolean getUse_save_buffers() { return RenderSettings_use_save_buffers_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_save_buffers_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_RenderSettings_save_buffers_get.getBool(ptr);
}};

public void setUse_save_buffers(boolean value) { RenderSettings_use_save_buffers_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_save_buffers_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 1024;
	else data.scemode &= ~1024;
}};

public boolean getUse_full_sample() { return RenderSettings_use_full_sample_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_full_sample_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_RenderSettings_full_sample_get.getBool(ptr);
}};

public void setUse_full_sample(boolean value) { RenderSettings_use_full_sample_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_full_sample_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 32768;
	else data.scemode &= ~32768;
}};

//public boolean getUse_backbuf() { return RenderSettings_use_backbuf_get.getBool(ptr); }
//private static PropBooleanGetFunc RenderSettings_use_backbuf_get = new PropBooleanGetFunc() {
//public boolean getBool(PointerRNA ptr)
//{
//	RenderData data= (RenderData)(ptr.data);
//	return (((data.bufflag) & 1) != 0);
//}};
//
//public void setUse_backbuf(boolean value) { RenderSettings_use_backbuf_set.setBool(ptr, value); }
//private static PropBooleanSetFunc RenderSettings_use_backbuf_set = new PropBooleanSetFunc() {
//public void setBool(PointerRNA ptr, boolean value)
//{
//	RenderData data= (RenderData)(ptr.data);
//	if(value) data.bufflag |= 1;
//	else data.bufflag &= ~1;
//}};

public int getDisplay_mode() { return RenderSettings_display_mode_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_display_mode_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.displaymode) & 3);
}};

public void setDisplay_mode(int value) { RenderSettings_display_mode_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_display_mode_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.displaymode &= ~3;
	data.displaymode |= value;
}};

public String getFilepath() { RenderSettings_filepath_get.getStr(ptr, DEFAULT_BUF,0); return StringUtil.toJString(DEFAULT_BUF,0);}
private static PropStringGetFunc RenderSettings_filepath_get = new PropStringGetFunc() {
public void getStr(PointerRNA ptr, byte[] value, int offset)
{
	RenderData data= (RenderData)(ptr.data);
	StringUtil.BLI_strncpy(value,offset, data.pic,0, data.pic.length);
}};

private static PropStringLengthFunc RenderSettings_filepath_length = new PropStringLengthFunc() {
public int lenStr(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return StringUtil.strlen(data.pic,0);
}};

public void setFilepath(String value) { RenderSettings_filepath_set.setStr(ptr, StringUtil.toCString(value),0); }
private static PropStringSetFunc RenderSettings_filepath_set = new PropStringSetFunc() {
public void setStr(PointerRNA ptr, byte[] value, int offset)
{
	RenderData data= (RenderData)(ptr.data);
	StringUtil.BLI_strncpy(data.pic,0, value,offset, data.pic.length);
}};

public int getBake_type() { return RenderSettings_bake_type_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_bake_type_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.bake_mode) & 7);
}};

public void setBake_type(int value) { RenderSettings_bake_type_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_bake_type_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.bake_mode &= ~7;
	data.bake_mode |= value;
}};

public int getBake_normal_space() { return RenderSettings_bake_normal_space_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_bake_normal_space_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.bake_normal_space) & 3);
}};

public void setBake_normal_space(int value) { RenderSettings_bake_normal_space_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_bake_normal_space_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.bake_normal_space &= ~3;
	data.bake_normal_space |= value;
}};

public int getBake_quad_split() { return RenderSettings_bake_quad_split_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_bake_quad_split_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.bake_quad_split);
}};

public void setBake_quad_split(int value) { RenderSettings_bake_quad_split_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_bake_quad_split_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.bake_quad_split= castMe(value, data.bake_quad_split);
}};

public int getBake_aa_mode() { return RenderSettings_bake_aa_mode_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_bake_aa_mode_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return ((data.bake_osa) & 31);
}};

public void setBake_aa_mode(int value) { RenderSettings_bake_aa_mode_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_bake_aa_mode_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	data.bake_osa &= ~31;
	data.bake_osa |= value;
}};

public boolean getUse_bake_selected_to_active() { return RenderSettings_use_bake_selected_to_active_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_bake_selected_to_active_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.bake_flag) & 4) != 0);
}};

public void setUse_bake_selected_to_active(boolean value) { RenderSettings_use_bake_selected_to_active_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_bake_selected_to_active_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.bake_flag |= 4;
	else data.bake_flag &= ~4;
}};

public boolean getUse_bake_normalize() { return RenderSettings_use_bake_normalize_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_bake_normalize_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.bake_flag) & 8) != 0);
}};

public void setUse_bake_normalize(boolean value) { RenderSettings_use_bake_normalize_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_bake_normalize_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.bake_flag |= 8;
	else data.bake_flag &= ~8;
}};

public boolean getUse_bake_clear() { return RenderSettings_use_bake_clear_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_bake_clear_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.bake_flag) & 1) != 0);
}};

public void setUse_bake_clear(boolean value) { RenderSettings_use_bake_clear_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_bake_clear_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.bake_flag |= 1;
	else data.bake_flag &= ~1;
}};

public boolean getUse_bake_antialiasing() { return RenderSettings_use_bake_antialiasing_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_bake_antialiasing_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.bake_flag) & 2) != 0);
}};

public void setUse_bake_antialiasing(boolean value) { RenderSettings_use_bake_antialiasing_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_bake_antialiasing_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.bake_flag |= 2;
	else data.bake_flag &= ~2;
}};

public int getBake_margin() { return RenderSettings_bake_margin_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_bake_margin_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.bake_filter);
}};

public void setBake_margin(int value) { RenderSettings_bake_margin_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_bake_margin_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, 32);
	data.bake_filter= castMe(value, data.bake_filter);
}};

public float getBake_distance() { return RenderSettings_bake_distance_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_bake_distance_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.bake_maxdist);
}};

public void setBake_distance(float value) { RenderSettings_bake_distance_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_bake_distance_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1000.0f);
	data.bake_maxdist= value;
}};

public float getBake_bias() { return RenderSettings_bake_bias_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_bake_bias_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.bake_biasdist);
}};

public void setBake_bias(float value) { RenderSettings_bake_bias_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_bake_bias_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0.0f, 1000.0f);
	data.bake_biasdist= value;
}};

public boolean getUse_stamp_time() { return RenderSettings_use_stamp_time_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_time_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 1) != 0);
}};

public void setUse_stamp_time(boolean value) { RenderSettings_use_stamp_time_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_time_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 1;
	else data.stamp &= ~1;
}};

public boolean getUse_stamp_date() { return RenderSettings_use_stamp_date_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_date_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 4) != 0);
}};

public void setUse_stamp_date(boolean value) { RenderSettings_use_stamp_date_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_date_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 4;
	else data.stamp &= ~4;
}};

public boolean getUse_stamp_frame() { return RenderSettings_use_stamp_frame_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_frame_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 2) != 0);
}};

public void setUse_stamp_frame(boolean value) { RenderSettings_use_stamp_frame_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_frame_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 2;
	else data.stamp &= ~2;
}};

public boolean getUse_stamp_camera() { return RenderSettings_use_stamp_camera_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_camera_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 8) != 0);
}};

public void setUse_stamp_camera(boolean value) { RenderSettings_use_stamp_camera_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_camera_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 8;
	else data.stamp &= ~8;
}};

public boolean getUse_stamp_scene() { return RenderSettings_use_stamp_scene_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_scene_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 16) != 0);
}};

public void setUse_stamp_scene(boolean value) { RenderSettings_use_stamp_scene_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_scene_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 16;
	else data.stamp &= ~16;
}};

public boolean getUse_stamp_note() { return RenderSettings_use_stamp_note_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_note_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 32) != 0);
}};

public void setUse_stamp_note(boolean value) { RenderSettings_use_stamp_note_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_note_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 32;
	else data.stamp &= ~32;
}};

public boolean getUse_stamp_marker() { return RenderSettings_use_stamp_marker_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_marker_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 128) != 0);
}};

public void setUse_stamp_marker(boolean value) { RenderSettings_use_stamp_marker_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_marker_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 128;
	else data.stamp &= ~128;
}};

public boolean getUse_stamp_filename() { return RenderSettings_use_stamp_filename_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_filename_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 256) != 0);
}};

public void setUse_stamp_filename(boolean value) { RenderSettings_use_stamp_filename_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_filename_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 256;
	else data.stamp &= ~256;
}};

public boolean getUse_stamp_sequencer_strip() { return RenderSettings_use_stamp_sequencer_strip_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_sequencer_strip_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 512) != 0);
}};

public void setUse_stamp_sequencer_strip(boolean value) { RenderSettings_use_stamp_sequencer_strip_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_sequencer_strip_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 512;
	else data.stamp &= ~512;
}};

public boolean getUse_stamp_render_time() { return RenderSettings_use_stamp_render_time_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_render_time_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 1024) != 0);
}};

public void setUse_stamp_render_time(boolean value) { RenderSettings_use_stamp_render_time_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_render_time_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 1024;
	else data.stamp &= ~1024;
}};

public String getStamp_note_text() { RenderSettings_stamp_note_text_get.getStr(ptr, DEFAULT_BUF,0); return StringUtil.toJString(DEFAULT_BUF,0);}
private static PropStringGetFunc RenderSettings_stamp_note_text_get = new PropStringGetFunc() {
public void getStr(PointerRNA ptr, byte[] value, int offset)
{
	RenderData data= (RenderData)(ptr.data);
	StringUtil.BLI_strncpy(value,offset, data.stamp_udata,0, data.stamp_udata.length);
}};

private static PropStringLengthFunc RenderSettings_stamp_note_text_length = new PropStringLengthFunc() {
public int lenStr(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return StringUtil.strlen(data.stamp_udata,0);
}};

public void setStamp_note_text(String value) { RenderSettings_stamp_note_text_set.setStr(ptr, StringUtil.toCString(value),0); }
private static PropStringSetFunc RenderSettings_stamp_note_text_set = new PropStringSetFunc() {
public void setStr(PointerRNA ptr, byte[] value, int offset)
{
	RenderData data= (RenderData)(ptr.data);
	StringUtil.BLI_strncpy(data.stamp_udata,0, value,offset, data.stamp_udata.length);
}};

public boolean getUse_stamp() { return RenderSettings_use_stamp_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_stamp_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.stamp) & 64) != 0);
}};

public void setUse_stamp(boolean value) { RenderSettings_use_stamp_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_stamp_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.stamp |= 64;
	else data.stamp &= ~64;
}};

public int getStamp_font_size() { return RenderSettings_stamp_font_size_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_stamp_font_size_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.stamp_font_id);
}};

public void setStamp_font_size(int value) { RenderSettings_stamp_font_size_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_stamp_font_size_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 8, 64);
	data.stamp_font_id= castMe(value, data.stamp_font_id);
}};

public float getStamp_foreground() { return RenderSettings_stamp_foreground_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_stamp_foreground_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
//	RenderData data= (RenderData)(ptr.data);
//	return (float)(data.fg_stamp);
	return 0.0f;
}};

public void setStamp_foreground(float value) { RenderSettings_stamp_foreground_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_stamp_foreground_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
//	RenderData data= (RenderData)(ptr.data);
//	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//	data.fg_stamp= value;
}};

public float getStamp_background() { return RenderSettings_stamp_background_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_stamp_background_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
//	RenderData data= (RenderData)(ptr.data);
//	return (float)(data.bg_stamp);
	return 0.0f;
}};

public void setStamp_background(float value) { RenderSettings_stamp_background_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_stamp_background_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
//	RenderData data= (RenderData)(ptr.data);
//	value= UtilDefines.CLAMPIS(value, 0.0f, 1.0f);
//	data.bg_stamp= value;
}};

public boolean getUse_sequencer_gl_preview() { return RenderSettings_use_sequencer_gl_preview_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_sequencer_gl_preview_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.seq_flag) & 1) != 0);
}};

public void setUse_sequencer_gl_preview(boolean value) { RenderSettings_use_sequencer_gl_preview_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_sequencer_gl_preview_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.seq_flag |= 1;
	else data.seq_flag &= ~1;
}};

public boolean getUse_sequencer_gl_render() { return RenderSettings_use_sequencer_gl_render_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_sequencer_gl_render_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.seq_flag) & 2) != 0);
}};

public void setUse_sequencer_gl_render(boolean value) { RenderSettings_use_sequencer_gl_render_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_sequencer_gl_render_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.seq_flag |= 2;
	else data.seq_flag &= ~2;
}};

public int getSequencer_gl_preview() { return RenderSettings_sequencer_gl_preview_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_sequencer_gl_preview_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.seq_prev_type);
}};

public void setSequencer_gl_preview(int value) { RenderSettings_sequencer_gl_preview_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_sequencer_gl_preview_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.seq_prev_type= castMe(value, data.seq_prev_type);
}};

public int getSequencer_gl_render() { return RenderSettings_sequencer_gl_render_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_sequencer_gl_render_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.seq_rend_type);
}};

public void setSequencer_gl_render(int value) { RenderSettings_sequencer_gl_render_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_sequencer_gl_render_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.seq_rend_type= castMe(value, data.seq_rend_type);
}};

private static PropCollectionGetFunc RenderSettings_layers_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return null;
}};

private static PropCollectionBeginFunc RenderSettings_layers_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_RenderSettings_layers;

	rna_iterator_listbase_begin(iter, data.layers, null);

	if(iter.valid)
		iter.ptr= RenderSettings_layers_get.get(iter);
}};

private static PropCollectionEndFunc RenderSettings_layers_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
}};

public boolean getUse_single_layer() { return RenderSettings_use_single_layer_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_single_layer_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.scemode) & 512) != 0);
}};

public void setUse_single_layer(boolean value) { RenderSettings_use_single_layer_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_single_layer_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.scemode |= 512;
	else data.scemode &= ~512;
}};

public int getEngine() { return RenderSettings_engine_get.getEnum(ptr); }
private static PropEnumGetFunc RenderSettings_engine_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	return rna_RenderSettings_engine_get.getEnum(ptr);
}};

public void setEngine(int value) { RenderSettings_engine_set.setEnum(ptr, value); }
private static PropEnumSetFunc RenderSettings_engine_set = new PropEnumSetFunc() {
public void setEnum(PointerRNA ptr, int value)
{
	rna_RenderSettings_engine_set.setEnum(ptr, value);
}};

public boolean getHas_multiple_engines() { return RenderSettings_has_multiple_engines_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_has_multiple_engines_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_RenderSettings_multiple_engines_get.getBool(ptr);
}};

public boolean getUse_game_engine() { return RenderSettings_use_game_engine_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_game_engine_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	return rna_RenderSettings_use_game_engine_get.getBool(ptr);
}};

public boolean getUse_simplify() { return RenderSettings_use_simplify_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_simplify_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.mode) & 16777216) != 0);
}};

public void setUse_simplify(boolean value) { RenderSettings_use_simplify_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_simplify_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.mode |= 16777216;
	else data.mode &= ~16777216;
}};

public int getSimplify_subdivision() { return RenderSettings_simplify_subdivision_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_simplify_subdivision_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.simplify_subsurf);
}};

public void setSimplify_subdivision(int value) { RenderSettings_simplify_subdivision_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_simplify_subdivision_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
	data.simplify_subsurf= castMe(value, data.simplify_subsurf);
}};

public float getSimplify_child_particles() { return RenderSettings_simplify_child_particles_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_simplify_child_particles_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.simplify_particles);
}};

public void setSimplify_child_particles(float value) { RenderSettings_simplify_child_particles_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_simplify_child_particles_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.simplify_particles= value;
}};

public int getSimplify_shadow_samples() { return RenderSettings_simplify_shadow_samples_get.getInt(ptr); }
private static PropIntGetFunc RenderSettings_simplify_shadow_samples_get = new PropIntGetFunc() {
public int getInt(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (int)(data.simplify_shadowsamples);
}};

public void setSimplify_shadow_samples(int value) { RenderSettings_simplify_shadow_samples_set.setInt(ptr, value); }
private static PropIntSetFunc RenderSettings_simplify_shadow_samples_set = new PropIntSetFunc() {
public void setInt(PointerRNA ptr, int value)
{
	RenderData data= (RenderData)(ptr.data);
	value= UtilDefines.CLAMPIS(value, 0, INT_MAX);
	data.simplify_shadowsamples= castMe(value, data.simplify_shadowsamples);
}};

public float getSimplify_ao_sss() { return RenderSettings_simplify_ao_sss_get.getFloat(ptr); }
private static PropFloatGetFunc RenderSettings_simplify_ao_sss_get = new PropFloatGetFunc() {
public float getFloat(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (float)(data.simplify_aosss);
}};

public void setSimplify_ao_sss(float value) { RenderSettings_simplify_ao_sss_set.setFloat(ptr, value); }
private static PropFloatSetFunc RenderSettings_simplify_ao_sss_set = new PropFloatSetFunc() {
public void setFloat(PointerRNA ptr, float value)
{
	RenderData data= (RenderData)(ptr.data);
	value= value;
	data.simplify_aosss= value;
}};

public boolean getUse_simplify_triangulate() { return RenderSettings_use_simplify_triangulate_get.getBool(ptr); }
private static PropBooleanGetFunc RenderSettings_use_simplify_triangulate_get = new PropBooleanGetFunc() {
public boolean getBool(PointerRNA ptr)
{
	RenderData data= (RenderData)(ptr.data);
	return (((data.simplify_flag) & 1) != 0);
}};

public void setUse_simplify_triangulate(boolean value) { RenderSettings_use_simplify_triangulate_set.setBool(ptr, value); }
private static PropBooleanSetFunc RenderSettings_use_simplify_triangulate_set = new PropBooleanSetFunc() {
public void setBool(PointerRNA ptr, boolean value)
{
	RenderData data= (RenderData)(ptr.data);
	if(value) data.simplify_flag |= 1;
	else data.simplify_flag &= ~1;
}};

/* Render Data */
private static CollectionPropertyRNA rna_RenderSettings_rna_properties = new CollectionPropertyRNA(
	null, null,
	-1, "rna_properties", 128, "Properties",
	"RNA property collection",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_rna_properties_begin, RenderSettings_rna_properties_next, RenderSettings_rna_properties_end, RenderSettings_rna_properties_get, null, null, rna_builtin_properties_lookup_string, RnaProperty.RNA_Property
);

private static PointerPropertyRNA rna_RenderSettings_rna_type = new PointerPropertyRNA(
	null, null,
	-1, "rna_type", 524288, "RNA",
	"RNA type definition",
	0,
	PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_rna_type_get, null, null, null,RnaStruct.RNA_Struct
);

private static EnumPropertyItem[] rna_RenderSettings_color_mode_items = {
	new EnumPropertyItem(8, "BW", 0, "BW", "Images are saved with BW (grayscale) data"),
	new EnumPropertyItem(24, "RGB", 0, "RGB", "Images are saved with RGB (color) data"),
	new EnumPropertyItem(32, "RGBA", 0, "RGBA", "Images are saved with RGB and Alpha data (if supported)"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_color_mode = new EnumPropertyRNA(
	null, null,
	-1, "color_mode", 3, "Color Mode",
	"Choose BW for saving greyscale images, RGB for saving red, green and blue channels, AND RGBA for saving red, green, blue + alpha channels",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_color_mode_get, RenderSettings_color_mode_set, null, rna_RenderSettings_color_mode_items, 3, 8
);

private static IntPropertyRNA rna_RenderSettings_resolution_x = new IntPropertyRNA(
	null, null,
	-1, "resolution_x", 3, "Resolution X",
	"Number of horizontal pixels in the rendered image",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_resolution_x_get, RenderSettings_resolution_x_set, null, null, null,
	4, 10000, 4, 10000, 1, 0, null
);

private static IntPropertyRNA rna_RenderSettings_resolution_y = new IntPropertyRNA(
	null, null,
	-1, "resolution_y", 3, "Resolution Y",
	"Number of vertical pixels in the rendered image",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_resolution_y_get, RenderSettings_resolution_y_set, null, null, null,
	4, 10000, 4, 10000, 1, 0, null
);

private static IntPropertyRNA rna_RenderSettings_resolution_percentage = new IntPropertyRNA(
	null, null,
	-1, "resolution_percentage", 3, "Resolution %",
	"Percentage scale for render resolution",
	0,
	PROP_INT, PROP_PERCENTAGE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_resolution_percentage_get, RenderSettings_resolution_percentage_set, null, null, null,
	1, 100, 0, INT_MAX, 10, 0, null
);

private static IntPropertyRNA rna_RenderSettings_parts_x = new IntPropertyRNA(
	null, null,
	-1, "parts_x", 3, "Parts X",
	"Number of horizontal tiles to use while rendering",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_parts_x_get, RenderSettings_parts_x_set, null, null, null,
	1, 512, 1, 512, 1, 0, null
);

private static IntPropertyRNA rna_RenderSettings_parts_y = new IntPropertyRNA(
	null, null,
	-1, "parts_y", 3, "Parts Y",
	"Number of vertical tiles to use while rendering",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_parts_y_get, RenderSettings_parts_y_set, null, null, null,
	1, 512, 1, 512, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_pixel_aspect_x = new FloatPropertyRNA(
	null, null,
	-1, "pixel_aspect_x", 3, "Pixel Aspect X",
	"Horizontal aspect ratio - for anamorphic or non-square pixel output",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_pixel_aspect_x_get, RenderSettings_pixel_aspect_x_set, null, null, null, 1.0f, 200.0f, 1.0f, 200.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_pixel_aspect_y = new FloatPropertyRNA(
	null, null,
	-1, "pixel_aspect_y", 3, "Pixel Aspect Y",
	"Vertical aspect ratio - for anamorphic or non-square pixel output",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_pixel_aspect_y_get, RenderSettings_pixel_aspect_y_set, null, null, null, 1.0f, 200.0f, 1.0f, 200.0f, 10.0f, 3, 0.0f, null
);

private static IntPropertyRNA rna_RenderSettings_file_quality = new IntPropertyRNA(
	null, null,
	-1, "file_quality", 3, "Quality",
	"Quality of JPEG images, AVI Jpeg and SGI movies, Compression for PNG\'s",
	0,
	PROP_INT, PROP_PERCENTAGE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_file_quality_get, RenderSettings_file_quality_set, null, null, null,
	0, 100, 0, 100, 1, 0, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_tiff_16bit = new BooleanPropertyRNA(
	null, null,
	-1, "use_tiff_16bit", 3, "16 Bit",
	"Save TIFF with 16 bits per channel",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_tiff_16bit_get, RenderSettings_use_tiff_16bit_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_cineon_log = new BooleanPropertyRNA(
	null, null,
	-1, "use_cineon_log", 3, "Log",
	"Convert to logarithmic color space",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_cineon_log_get, RenderSettings_use_cineon_log_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_cineon_black = new IntPropertyRNA(
	null, null,
	-1, "cineon_black", 3, "B",
	"Log conversion reference blackpoint",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_cineon_black_get, RenderSettings_cineon_black_set, null, null, null,
	0, 1024, 0, 1024, 1, 0, null
);

private static IntPropertyRNA rna_RenderSettings_cineon_white = new IntPropertyRNA(
	null, null,
	-1, "cineon_white", 3, "W",
	"Log conversion reference whitepoint",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_cineon_white_get, RenderSettings_cineon_white_set, null, null, null,
	0, 1024, 0, 1024, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_cineon_gamma = new FloatPropertyRNA(
	null, null,
	-1, "cineon_gamma", 3, "G",
	"Log conversion gamma",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_cineon_gamma_get, RenderSettings_cineon_gamma_set, null, null, null, 0.0f, 10.0f, 0.0f, 10.0f, 10.0f, 3, 0.0f, null
);

private static EnumPropertyItem[] rna_RenderSettings_ffmpeg_format_items = {
	new EnumPropertyItem(0, "MPEG1", 0, "MPEG-1", ""),
	new EnumPropertyItem(1, "MPEG2", 0, "MPEG-2", ""),
	new EnumPropertyItem(2, "MPEG4", 0, "MPEG-4", ""),
	new EnumPropertyItem(3, "AVI", 0, "AVI", ""),
	new EnumPropertyItem(4, "QUICKTIME", 0, "Quicktime", ""),
	new EnumPropertyItem(5, "DV", 0, "DV", ""),
	new EnumPropertyItem(6, "H264", 0, "H.264", ""),
	new EnumPropertyItem(7, "XVID", 0, "Xvid", ""),
	new EnumPropertyItem(10, "OGG", 0, "Ogg", ""),
	new EnumPropertyItem(9, "MKV", 0, "Matroska", ""),
	new EnumPropertyItem(8, "FLASH", 0, "Flash", ""),
	new EnumPropertyItem(11, "WAV", 0, "Wav", ""),
	new EnumPropertyItem(12, "MP3", 0, "Mp3", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_ffmpeg_format = new EnumPropertyRNA(
	null, null,
	-1, "ffmpeg_format", 3, "Format",
	"Output file format",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_ffmpeg_format_get, RenderSettings_ffmpeg_format_set, null, rna_RenderSettings_ffmpeg_format_items, 13, 0
);

private static IntPropertyRNA rna_RenderSettings_fps = new IntPropertyRNA(
	null, null,
	-1, "fps", 1, "FPS",
	"Framerate, expressed in frames per second",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_fps_get, RenderSettings_fps_set, null, null, null,
	1, 120, 1, 120, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_fps_base = new FloatPropertyRNA(
	null, null,
	-1, "fps_base", 1, "FPS Base",
	"Framerate base",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_fps_base_get, RenderSettings_fps_base_set, null, null, null, 0.1000000015f, 120.0f, 0.1000000015f, 120.0f, 10.0f, 3, 0.0f, null
);

private static IntPropertyRNA rna_RenderSettings_frame_map_old = new IntPropertyRNA(
	null, null,
	-1, "frame_map_old", 1, "Frame Map Old",
	"Specify old mapping value in frames",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_framelen_update, 67305472, null, null,
	0, -1, null,
	RenderSettings_frame_map_old_get, RenderSettings_frame_map_old_set, null, null, null,
	1, 900, 1, 900, 1, 0, null
);

private static IntPropertyRNA rna_RenderSettings_frame_map_new = new IntPropertyRNA(
	null, null,
	-1, "frame_map_new", 1, "Frame Map New",
	"Specify how many frames the Map Old will last",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_framelen_update, 67305472, null, null,
	0, -1, null,
	RenderSettings_frame_map_new_get, RenderSettings_frame_map_new_set, null, null, null,
	1, 900, 1, 900, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_dither_intensity = new FloatPropertyRNA(
	null, null,
	-1, "dither_intensity", 3, "Dither Intensity",
	"Amount of dithering noise added to the rendered image to break up banding",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_dither_intensity_get, RenderSettings_dither_intensity_set, null, null, null, 0.0f, 2.0f, 0.0f, 2.0f, 10.0f, 3, 0.0f, null
);

private static EnumPropertyItem[] rna_RenderSettings_pixel_filter_type_items = {
	new EnumPropertyItem(0, "BOX", 0, "Box", ""),
	new EnumPropertyItem(1, "TENT", 0, "Tent", ""),
	new EnumPropertyItem(2, "QUADRATIC", 0, "Quadratic", ""),
	new EnumPropertyItem(3, "CUBIC", 0, "Cubic", ""),
	new EnumPropertyItem(4, "CATMULLROM", 0, "Catmull-Rom", ""),
	new EnumPropertyItem(5, "GAUSSIAN", 0, "Gaussian", ""),
	new EnumPropertyItem(6, "MITCHELL", 0, "Mitchell-Netravali", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_pixel_filter_type = new EnumPropertyRNA(
	null, null,
	-1, "pixel_filter_type", 3, "Pixel Filter",
	"Reconstruction filter used for combining anti-aliasing samples",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_pixel_filter_type_get, RenderSettings_pixel_filter_type_set, null, rna_RenderSettings_pixel_filter_type_items, 7, 0
);

private static FloatPropertyRNA rna_RenderSettings_filter_size = new FloatPropertyRNA(
	null, null,
	-1, "filter_size", 3, "Filter Size",
	"Pixel width over which the reconstruction filter combines samples",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_filter_size_get, RenderSettings_filter_size_set, null, null, null, 0.5000000000f, 1.5000000000f, 0.5000000000f, 1.5000000000f, 10.0f, 3, 0.0f, null
);

private static EnumPropertyItem[] rna_RenderSettings_alpha_mode_items = {
	new EnumPropertyItem(0, "SKY", 0, "Sky", "Transparent pixels are filled with sky color"),
	new EnumPropertyItem(1, "PREMUL", 0, "Premultiplied", "Transparent RGB pixels are multiplied by the alpha channel"),
	new EnumPropertyItem(2, "STRAIGHT", 0, "Straight Alpha", "Transparent RGB and alpha pixels are unmodified"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_alpha_mode = new EnumPropertyRNA(
	null, null,
	-1, "alpha_mode", 3, "Alpha Mode",
	"Representation of alpha information in the RGBA pixels",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_alpha_mode_get, RenderSettings_alpha_mode_set, null, rna_RenderSettings_alpha_mode_items, 3, 0
);

private static EnumPropertyItem[] rna_RenderSettings_octree_resolution_items = {
	new EnumPropertyItem(64, "64", 0, "64", ""),
	new EnumPropertyItem(128, "128", 0, "128", ""),
	new EnumPropertyItem(256, "256", 0, "256", ""),
	new EnumPropertyItem(512, "512", 0, "512", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_octree_resolution = new EnumPropertyRNA(
	null, null,
	-1, "octree_resolution", 3, "Octree Resolution",
	"Resolution of raytrace accelerator. Use higher resolutions for larger scenes",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_octree_resolution_get, RenderSettings_octree_resolution_set, null, rna_RenderSettings_octree_resolution_items, 4, 64
);

private static EnumPropertyItem[] rna_RenderSettings_raytrace_method_items = {
	new EnumPropertyItem(0, "AUTO", 0, "Auto", ""),
	new EnumPropertyItem(1, "OCTREE", 0, "Octree", "Use old Octree structure"),
	new EnumPropertyItem(2, "BLIBVH", 0, "BLI BVH", "Use BLI K-Dop BVH.c"),
	new EnumPropertyItem(3, "VBVH", 0, "vBVH", ""),
	new EnumPropertyItem(4, "SIMD_SVBVH", 0, "SIMD SVBVH", ""),
	new EnumPropertyItem(5, "SIMD_QBVH", 0, "SIMD QBVH", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_raytrace_method = new EnumPropertyRNA(
	null, null,
	-1, "raytrace_method", 3, "Raytrace Acceleration Structure",
	"Type of raytrace accelerator structure",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_raytrace_method_get, RenderSettings_raytrace_method_set, null, rna_RenderSettings_raytrace_method_items, 6, 0
);

private static BooleanPropertyRNA rna_RenderSettings_use_instances = new BooleanPropertyRNA(
	null, null,
	-1, "use_instances", 3, "Use Instances",
	"Instance support leads to effective memory reduction when using duplicates",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_instances_get, RenderSettings_use_instances_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_local_coords = new BooleanPropertyRNA(
	null, null,
	-1, "use_local_coords", 3, "Use Local Coords",
	"Vertex coordinates are stored localy on each primitive. Increases memory usage, but may have impact on speed",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_local_coords_get, RenderSettings_use_local_coords_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_antialiasing = new BooleanPropertyRNA(
	null, null,
	-1, "use_antialiasing", 3, "Anti-Aliasing",
	"Render and combine multiple samples per pixel to prevent jagged edges",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_antialiasing_get, RenderSettings_use_antialiasing_set, null, null, false, null
);

private static EnumPropertyItem[] rna_RenderSettings_antialiasing_samples_items = {
	new EnumPropertyItem(5, "5", 0, "5", ""),
	new EnumPropertyItem(8, "8", 0, "8", ""),
	new EnumPropertyItem(11, "11", 0, "11", ""),
	new EnumPropertyItem(16, "16", 0, "16", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_antialiasing_samples = new EnumPropertyRNA(
	null, null,
	-1, "antialiasing_samples", 3, "Anti-Aliasing Samples",
	"Amount of anti-aliasing samples per pixel",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_antialiasing_samples_get, RenderSettings_antialiasing_samples_set, null, rna_RenderSettings_antialiasing_samples_items, 4, 5
);

private static BooleanPropertyRNA rna_RenderSettings_use_fields = new BooleanPropertyRNA(
	null, null,
	-1, "use_fields", 3, "Fields",
	"Render image to two fields per frame, for interlaced TV output",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_fields_get, RenderSettings_use_fields_set, null, null, false, null
);

private static EnumPropertyItem[] rna_RenderSettings_field_order_items = {
	new EnumPropertyItem(0, "EVEN_FIRST", 0, "Upper First", "Upper field first"),
	new EnumPropertyItem(8192, "ODD_FIRST", 0, "Lower First", "Lower field first"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_field_order = new EnumPropertyRNA(
	null, null,
	-1, "field_order", 3, "Field Order",
	"Order of video fields. Select which lines get rendered first, to create smooth motion for TV output",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_field_order_get, RenderSettings_field_order_set, null, rna_RenderSettings_field_order_items, 2, 0
);

private static BooleanPropertyRNA rna_RenderSettings_use_fields_still = new BooleanPropertyRNA(
	null, null,
	-1, "use_fields_still", 3, "Fields Still",
	"Disable the time difference between fields",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_fields_still_get, RenderSettings_use_fields_still_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_shadows = new BooleanPropertyRNA(
	null, null,
	-1, "use_shadows", 3, "Shadows",
	"Calculate shadows while rendering",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_shadows_get, RenderSettings_use_shadows_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_envmaps = new BooleanPropertyRNA(
	null, null,
	-1, "use_envmaps", 3, "Environment Maps",
	"Calculate environment maps while rendering",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_envmaps_get, RenderSettings_use_envmaps_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_radiosity = new BooleanPropertyRNA(
	null, null,
	-1, "use_radiosity", 3, "Radiosity",
	"Calculate radiosity in a pre-process before rendering",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_radiosity_get, RenderSettings_use_radiosity_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_sss = new BooleanPropertyRNA(
	null, null,
	-1, "use_sss", 3, "Subsurface Scattering",
	"Calculate sub-surface scattering in materials rendering",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_sss_get, RenderSettings_use_sss_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_raytrace = new BooleanPropertyRNA(
	null, null,
	-1, "use_raytrace", 3, "Raytracing",
	"Pre-calculate the raytrace accelerator and render raytracing effects",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_raytrace_get, RenderSettings_use_raytrace_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_textures = new BooleanPropertyRNA(
	null, null,
	-1, "use_textures", 3, "Textures",
	"Use textures to affect material properties",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_textures_get, RenderSettings_use_textures_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_edge_enhance = new BooleanPropertyRNA(
	null, null,
	-1, "use_edge_enhance", 3, "Edge",
	"Create a toon outline around the edges of geometry",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_edge_enhance_get, RenderSettings_use_edge_enhance_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_edge_threshold = new IntPropertyRNA(
	null, null,
	-1, "edge_threshold", 3, "Edge Threshold",
	"Threshold for drawing outlines on geometry edges",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_edge_threshold_get, RenderSettings_edge_threshold_set, null, null, null,
	0, 255, 0, 255, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_edge_color = new FloatPropertyRNA(
	null, null,
	-1, "edge_color", 3, "Edge Color",
	"",
	0,
	PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{3, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_edge_color_get, RenderSettings_edge_color_set, null, null, null, 0.0f, 1.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

private static IntPropertyRNA rna_RenderSettings_threads = new IntPropertyRNA(
	null, null,
	-1, "threads", 3, "Threads",
	"Number of CPU threads to use simultaneously while rendering (for multi-core/CPU systems)",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_threads_get, RenderSettings_threads_set, null, null, null,
	1, 64, 1, 64, 1, 0, null
);

private static EnumPropertyItem[] rna_RenderSettings_threads_mode_items = {
	new EnumPropertyItem(0, "AUTO", 0, "Auto-detect", "Automatically determine the number of threads, based on CPUs"),
	new EnumPropertyItem(524288, "FIXED", 0, "Fixed", "Manually determine the number of threads"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_threads_mode = new EnumPropertyRNA(
	null, null,
	-1, "threads_mode", 3, "Threads Mode",
	"Determine the amount of render threads used",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_threads_mode_get, RenderSettings_threads_mode_set, null, rna_RenderSettings_threads_mode_items, 2, 0
);

private static BooleanPropertyRNA rna_RenderSettings_use_motion_blur = new BooleanPropertyRNA(
	null, null,
	-1, "use_motion_blur", 3, "Motion Blur",
	"Use multi-sampled 3D scene motion blur",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_motion_blur_get, RenderSettings_use_motion_blur_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_motion_blur_samples = new IntPropertyRNA(
	null, null,
	-1, "motion_blur_samples", 3, "Motion Samples",
	"Number of scene samples to take with motion blur",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_motion_blur_samples_get, RenderSettings_motion_blur_samples_set, null, null, null,
	1, 32, 1, 32, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_motion_blur_shutter = new FloatPropertyRNA(
	null, null,
	-1, "motion_blur_shutter", 3, "Shutter",
	"Time taken in frames between shutter open and close",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_motion_blur_shutter_get, RenderSettings_motion_blur_shutter_set, null, null, null, 0.0099999998f, 2.0f, 0.0099999998f, 10.0f, 1.0f, 0, 0.0f, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_border = new BooleanPropertyRNA(
	null, null,
	-1, "use_border", 3, "Border",
	"Render a user-defined border region, within the frame size. Note, this disables save_buffers and full_sample",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_border_get, RenderSettings_use_border_set, null, null, false, null
);

private static FloatPropertyRNA rna_RenderSettings_border_min_x = new FloatPropertyRNA(
	null, null,
	-1, "border_min_x", 3, "Border Minimum X",
	"Sets minimum X value to for the render border",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_border_min_x_get, RenderSettings_border_min_x_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_border_min_y = new FloatPropertyRNA(
	null, null,
	-1, "border_min_y", 3, "Border Minimum Y",
	"Sets minimum Y value for the render border",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_border_min_y_get, RenderSettings_border_min_y_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_border_max_x = new FloatPropertyRNA(
	null, null,
	-1, "border_max_x", 3, "Border Maximum X",
	"Sets maximum X value for the render border",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_border_max_x_get, RenderSettings_border_max_x_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_border_max_y = new FloatPropertyRNA(
	null, null,
	-1, "border_max_y", 3, "Border Maximum Y",
	"Sets maximum Y value for the render border",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_border_max_y_get, RenderSettings_border_max_y_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_crop_to_border = new BooleanPropertyRNA(
	null, null,
	-1, "use_crop_to_border", 3, "Crop to Border",
	"Crop the rendered frame to the defined border size",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_crop_to_border_get, RenderSettings_use_crop_to_border_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_placeholder = new BooleanPropertyRNA(
	null, null,
	-1, "use_placeholder", 3, "Placeholders",
	"Create empty placeholder files while rendering frames (similar to Unix \'touch\')",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_placeholder_get, RenderSettings_use_placeholder_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_overwrite = new BooleanPropertyRNA(
	null, null,
	-1, "use_overwrite", 3, "Overwrite",
	"Overwrite existing files while rendering",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_overwrite_get, RenderSettings_use_overwrite_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_compositing = new BooleanPropertyRNA(
	null, null,
	-1, "use_compositing", 3, "Compositing",
	"Process the render result through the compositing pipeline, if compositing nodes are enabled",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_compositing_get, RenderSettings_use_compositing_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_sequencer = new BooleanPropertyRNA(
	null, null,
	-1, "use_sequencer", 3, "Sequencer",
	"Process the render (and composited) result through the video sequence editor pipeline, if sequencer strips exist",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_sequencer_get, RenderSettings_use_sequencer_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_color_management = new BooleanPropertyRNA(
	null, null,
	-1, "use_color_management", 3, "Color Management",
	"Use linear workflow - gamma corrected imaging pipeline",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_RenderSettings_color_management_update, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_color_management_get, RenderSettings_use_color_management_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_file_extension = new BooleanPropertyRNA(
	null, null,
	-1, "use_file_extension", 3, "File Extensions",
	"Add the file format extensions to the rendered file name (eg: filename + .jpg)",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_file_extension_get, RenderSettings_use_file_extension_set, null, null, false, null
);

private static EnumPropertyItem[] rna_RenderSettings_file_format_items = {
	new EnumPropertyItem(0, "", 0, "Image", null),
	new EnumPropertyItem(20, "BMP", 540, "BMP", ""),
	new EnumPropertyItem(1, "IRIS", 540, "Iris", ""),
	new EnumPropertyItem(17, "PNG", 540, "PNG", ""),
	new EnumPropertyItem(4, "JPEG", 540, "JPEG", ""),
	new EnumPropertyItem(0, "TARGA", 540, "Targa", ""),
	new EnumPropertyItem(14, "TARGA_RAW", 540, "Targa Raw", ""),
	new EnumPropertyItem(0, "", 0, " ", null),
	new EnumPropertyItem(0, "", 0, "Movie", null),
	new EnumPropertyItem(18, "AVICODEC", 541, "AVI Codec", ""),
	new EnumPropertyItem(16, "AVI_JPEG", 541, "AVI JPEG", ""),
	new EnumPropertyItem(15, "AVI_RAW", 541, "AVI Raw", ""),
	new EnumPropertyItem(25, "FRAMESERVER", 542, "Frame Server", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_file_format = new EnumPropertyRNA(
	null, null,
	-1, "file_format", 3, "File Format",
	"File format to save the rendered images as",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_file_format_get, RenderSettings_file_format_set, null, rna_RenderSettings_file_format_items, 13, 0
);

private static StringPropertyRNA rna_RenderSettings_file_extension = new StringPropertyRNA(
	null, null,
	-1, "file_extension", 0, "Extension",
	"The file extension used for saving renders",
	0,
	PROP_STRING, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_file_extension_get, RenderSettings_file_extension_length, null, 0, ""
);

private static BooleanPropertyRNA rna_RenderSettings_is_movie_format = new BooleanPropertyRNA(
	null, null,
	-1, "is_movie_format", 2, "Movie Format",
	"When true the format is a movie",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_is_movie_format_get, null, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_free_image_textures = new BooleanPropertyRNA(
	null, null,
	-1, "use_free_image_textures", 3, "Free Image Textures",
	"Free all image texture from memory after render, to save memory before compositing",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_free_image_textures_get, RenderSettings_use_free_image_textures_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_free_unused_nodes = new BooleanPropertyRNA(
	null, null,
	-1, "use_free_unused_nodes", 3, "Free Unused Nodes",
	"Free Nodes that are not used while compositing, to save memory",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_free_unused_nodes_get, RenderSettings_use_free_unused_nodes_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_save_buffers = new BooleanPropertyRNA(
	null, null,
	-1, "use_save_buffers", 3, "Save Buffers",
	"Save tiles for all RenderLayers and SceneNodes to files in the temp directory (saves memory, required for Full Sample)",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_save_buffers_get, RenderSettings_use_save_buffers_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_full_sample = new BooleanPropertyRNA(
	null, null,
	-1, "use_full_sample", 3, "Full Sample",
	"Save for every anti-aliasing sample the entire RenderLayer results. This solves anti-aliasing issues with compositing",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_full_sample_get, RenderSettings_use_full_sample_set, null, null, false, null
);

//private static BooleanPropertyRNA rna_RenderSettings_use_backbuf = new BooleanPropertyRNA(
//	null, null,
//	-1, "use_backbuf", 3, "Back Buffer",
//	"Render backbuffer image",
//	0,
//	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
//	null, 67371008, null, null,
//	0, -1, null,
//	RenderSettings_use_backbuf_get, RenderSettings_use_backbuf_set, null, null, false, null
//);

private static EnumPropertyItem[] rna_RenderSettings_display_mode_items = {
	new EnumPropertyItem(0, "SCREEN", 0, "Full Screen", "Images are rendered in full Screen"),
	new EnumPropertyItem(1, "AREA", 0, "Image Editor", "Images are rendered in Image Editor"),
	new EnumPropertyItem(2, "WINDOW", 0, "New Window", "Images are rendered in new Window"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_display_mode = new EnumPropertyRNA(
	null, null,
	-1, "display_mode", 3, "Display",
	"Select where rendered images will be displayed",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_display_mode_get, RenderSettings_display_mode_set, null, rna_RenderSettings_display_mode_items, 3, 0
);

private static StringPropertyRNA rna_RenderSettings_filepath = new StringPropertyRNA(
	null, null,
	-1, "filepath", 1, "Output Path",
	"Directory/name to save animations, # characters defines the position and length of frame numbers",
	0,
	PROP_STRING, PROP_FILEPATH|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_filepath_get, RenderSettings_filepath_length, RenderSettings_filepath_set, 0, ""
);

private static EnumPropertyItem[] rna_RenderSettings_bake_type_items = {
	new EnumPropertyItem(1, "FULL", 0, "Full Render", ""),
	new EnumPropertyItem(2, "AO", 0, "Ambient Occlusion", ""),
	new EnumPropertyItem(6, "SHADOW", 0, "Shadow", ""),
	new EnumPropertyItem(3, "NORMALS", 0, "Normals", ""),
	new EnumPropertyItem(4, "TEXTURE", 0, "Textures", ""),
	new EnumPropertyItem(5, "DISPLACEMENT", 0, "Displacement", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_bake_type = new EnumPropertyRNA(
	null, null,
	-1, "bake_type", 3, "Bake Mode",
	"Choose shading information to bake into the image",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_type_get, RenderSettings_bake_type_set, null, rna_RenderSettings_bake_type_items, 6, 1
);

private static EnumPropertyItem[] rna_RenderSettings_bake_normal_space_items = {
	new EnumPropertyItem(0, "CAMERA", 0, "Camera", ""),
	new EnumPropertyItem(1, "WORLD", 0, "World", ""),
	new EnumPropertyItem(2, "OBJECT", 0, "Object", ""),
	new EnumPropertyItem(3, "TANGENT", 0, "Tangent", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_bake_normal_space = new EnumPropertyRNA(
	null, null,
	-1, "bake_normal_space", 3, "Normal Space",
	"Choose normal space for baking",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_normal_space_get, RenderSettings_bake_normal_space_set, null, rna_RenderSettings_bake_normal_space_items, 4, 0
);

private static EnumPropertyItem[] rna_RenderSettings_bake_quad_split_items = {
	new EnumPropertyItem(0, "AUTO", 0, "Automatic", "Split quads to give the least distortion while baking"),
	new EnumPropertyItem(1, "FIXED", 0, "Fixed", "Split quads predictably (0,1,2) (0,2,3)"),
	new EnumPropertyItem(2, "FIXED_ALT", 0, "Fixed Alternate", "Split quads predictably (1,2,3) (1,3,0)"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_bake_quad_split = new EnumPropertyRNA(
	null, null,
	-1, "bake_quad_split", 3, "Quad Split",
	"Choose the method used to split a quad into 2 triangles for baking",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_quad_split_get, RenderSettings_bake_quad_split_set, null, rna_RenderSettings_bake_quad_split_items, 3, 0
);

private static EnumPropertyItem[] rna_RenderSettings_bake_aa_mode_items = {
	new EnumPropertyItem(5, "5", 0, "5", ""),
	new EnumPropertyItem(8, "8", 0, "8", ""),
	new EnumPropertyItem(11, "11", 0, "11", ""),
	new EnumPropertyItem(16, "16", 0, "16", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_bake_aa_mode = new EnumPropertyRNA(
	null, null,
	-1, "bake_aa_mode", 3, "Anti-Aliasing Level",
	"",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_aa_mode_get, RenderSettings_bake_aa_mode_set, null, rna_RenderSettings_bake_aa_mode_items, 4, 5
);

private static BooleanPropertyRNA rna_RenderSettings_use_bake_selected_to_active = new BooleanPropertyRNA(
	null, null,
	-1, "use_bake_selected_to_active", 3, "Selected to Active",
	"Bake shading on the surface of selected objects to the active object",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_bake_selected_to_active_get, RenderSettings_use_bake_selected_to_active_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_bake_normalize = new BooleanPropertyRNA(
	null, null,
	-1, "use_bake_normalize", 3, "Normalized",
	"With displacement normalize to the distance, with ambient occlusion normalize without using material settings",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_bake_normalize_get, RenderSettings_use_bake_normalize_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_bake_clear = new BooleanPropertyRNA(
	null, null,
	-1, "use_bake_clear", 3, "Clear",
	"Clear Images before baking",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_bake_clear_get, RenderSettings_use_bake_clear_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_bake_antialiasing = new BooleanPropertyRNA(
	null, null,
	-1, "use_bake_antialiasing", 3, "Anti-Aliasing",
	"Enables Anti-aliasing",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_bake_antialiasing_get, RenderSettings_use_bake_antialiasing_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_bake_margin = new IntPropertyRNA(
	null, null,
	-1, "bake_margin", 3, "Margin",
	"Amount of pixels to extend the baked result with, as post process filter",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_margin_get, RenderSettings_bake_margin_set, null, null, null,
	0, 32, 0, 32, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_bake_distance = new FloatPropertyRNA(
	null, null,
	-1, "bake_distance", 3, "Distance",
	"Maximum distance from active object to other object (in blender units",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_distance_get, RenderSettings_bake_distance_set, null, null, null, 0.0f, 1000.0f, 0.0f, 1000.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_bake_bias = new FloatPropertyRNA(
	null, null,
	-1, "bake_bias", 3, "Bias",
	"Bias towards faces further away from the object (in blender units)",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_bake_bias_get, RenderSettings_bake_bias_set, null, null, null, 0.0f, 1000.0f, 0.0f, 1000.0f, 10.0f, 3, 0.0f, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_time = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_time", 3, "Stamp Time",
	"Include the render frame as HH:MM:SS.FF in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_time_get, RenderSettings_use_stamp_time_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_date = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_date", 3, "Stamp Date",
	"Include the current date in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_date_get, RenderSettings_use_stamp_date_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_frame = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_frame", 3, "Stamp Frame",
	"Include the frame number in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_frame_get, RenderSettings_use_stamp_frame_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_camera = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_camera", 3, "Stamp Camera",
	"Include the name of the active camera in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_camera_get, RenderSettings_use_stamp_camera_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_scene = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_scene", 3, "Stamp Scene",
	"Include the name of the active scene in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_scene_get, RenderSettings_use_stamp_scene_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_note = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_note", 3, "Stamp Note",
	"Include a custom note in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_note_get, RenderSettings_use_stamp_note_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_marker = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_marker", 3, "Stamp Marker",
	"Include the name of the last marker in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_marker_get, RenderSettings_use_stamp_marker_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_filename = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_filename", 3, "Stamp Filename",
	"Include the filename of the .blend file in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_filename_get, RenderSettings_use_stamp_filename_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_sequencer_strip = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_sequencer_strip", 3, "Stamp Sequence Strip",
	"Include the name of the foreground sequence strip in image metadata",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_sequencer_strip_get, RenderSettings_use_stamp_sequencer_strip_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp_render_time = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp_render_time", 3, "Stamp Render Time",
	"Include the render time in the stamp image",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_render_time_get, RenderSettings_use_stamp_render_time_set, null, null, false, null
);

private static StringPropertyRNA rna_RenderSettings_stamp_note_text = new StringPropertyRNA(
	null, null,
	-1, "stamp_note_text", 1, "Stamp Note Text",
	"Custom text to appear in the stamp note",
	0,
	PROP_STRING, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_stamp_note_text_get, RenderSettings_stamp_note_text_length, RenderSettings_stamp_note_text_set, 0, ""
);

private static BooleanPropertyRNA rna_RenderSettings_use_stamp = new BooleanPropertyRNA(
	null, null,
	-1, "use_stamp", 3, "Render Stamp",
	"Render the stamp info text in the rendered image",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_stamp_get, RenderSettings_use_stamp_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_stamp_font_size = new IntPropertyRNA(
	null, null,
	-1, "stamp_font_size", 3, "Font Size",
	"Size of the font used when rendering stamp text",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_stamp_font_size_get, RenderSettings_stamp_font_size_set, null, null, null,
	8, 64, 8, 64, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_stamp_foreground = new FloatPropertyRNA(
	null, null,
	-1, "stamp_foreground", 3, "Stamp Text Color",
	"Color to use for stamp text",
	0,
	PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{4, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_stamp_foreground_get, RenderSettings_stamp_foreground_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static FloatPropertyRNA rna_RenderSettings_stamp_background = new FloatPropertyRNA(
	null, null,
	-1, "stamp_background", 3, "Stamp Background",
	"Color to use behind stamp text",
	0,
	PROP_FLOAT, PROP_COLOR|PROP_UNIT_NONE, null, 0, new int[]{4, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_stamp_background_get, RenderSettings_stamp_background_set, null, null, null, 0.0f, 1.0f, 0.0f, 1.0f, 10.0f, 3, 0.0f, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_sequencer_gl_preview = new BooleanPropertyRNA(
	null, null,
	-1, "use_sequencer_gl_preview", 3, "Sequencer OpenGL",
	"",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_sequencer_gl_preview_get, RenderSettings_use_sequencer_gl_preview_set, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_sequencer_gl_render = new BooleanPropertyRNA(
	null, null,
	-1, "use_sequencer_gl_render", 3, "Sequencer OpenGL",
	"",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_sequencer_gl_render_get, RenderSettings_use_sequencer_gl_render_set, null, null, false, null
);

private static EnumPropertyItem[] rna_RenderSettings_sequencer_gl_preview_items = {
	new EnumPropertyItem(1, "BOUNDBOX", 468, "Bounding Box", "Display the object\'s local bounding boxes only"),
	new EnumPropertyItem(2, "WIREFRAME", 469, "Wireframe", "Display the object as wire edges"),
	new EnumPropertyItem(3, "SOLID", 470, "Solid", "Display the object solid, lit with default OpenGL lights"),
	new EnumPropertyItem(5, "TEXTURED", 472, "Textured", "Display the object solid, with face-assigned textures"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_sequencer_gl_preview = new EnumPropertyRNA(
	null, null,
	-1, "sequencer_gl_preview", 3, "Sequencer Preview Shading",
	"Method to draw in the sequencer view",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_sequencer_gl_preview_get, RenderSettings_sequencer_gl_preview_set, null, rna_RenderSettings_sequencer_gl_preview_items, 4, 1
);

private static EnumPropertyItem[] rna_RenderSettings_sequencer_gl_render_items = {
	new EnumPropertyItem(1, "BOUNDBOX", 468, "Bounding Box", "Display the object\'s local bounding boxes only"),
	new EnumPropertyItem(2, "WIREFRAME", 469, "Wireframe", "Display the object as wire edges"),
	new EnumPropertyItem(3, "SOLID", 470, "Solid", "Display the object solid, lit with default OpenGL lights"),
	new EnumPropertyItem(5, "TEXTURED", 472, "Textured", "Display the object solid, with face-assigned textures"),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_sequencer_gl_render = new EnumPropertyRNA(
	null, null,
	-1, "sequencer_gl_render", 3, "Sequencer Preview Shading",
	"Method to draw in the sequencer view",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_sequencer_gl_render_get, RenderSettings_sequencer_gl_render_set, null, rna_RenderSettings_sequencer_gl_render_items, 4, 1
);

private static CollectionPropertyRNA rna_RenderSettings_layers = new CollectionPropertyRNA(
	null, null,
	-1, "layers", 0, "Render Layers",
	"",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, RnaRenderLayers.RNA_RenderLayers,
	RenderSettings_layers_begin, null, RenderSettings_layers_end, RenderSettings_layers_get, null, null, null, RnaSceneRenderLayer.RNA_SceneRenderLayer
);

private static BooleanPropertyRNA rna_RenderSettings_use_single_layer = new BooleanPropertyRNA(
	null, null,
	-1, "use_single_layer", 4099, "Single Layer",
	"Only render the active layer",
	42,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 67371008, null, null,
	0, -1, null,
	RenderSettings_use_single_layer_get, RenderSettings_use_single_layer_set, null, null, false, null
);

private static EnumPropertyItem[] rna_RenderSettings_engine_items = {
	new EnumPropertyItem(0, "BLENDER_RENDER", 0, "Blender Render", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_RenderSettings_engine = new EnumPropertyRNA(
	null, null,
	-1, "engine", 3, "Engine",
	"Engine to use for rendering",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 33554432, null, null,
	0, -1, null,
	RenderSettings_engine_get, RenderSettings_engine_set, rna_RenderSettings_engine_itemf, rna_RenderSettings_engine_items, 1, 0
);

private static BooleanPropertyRNA rna_RenderSettings_has_multiple_engines = new BooleanPropertyRNA(
	null, null,
	-1, "has_multiple_engines", 2, "Multiple Engines",
	"More than one rendering engine is available",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_has_multiple_engines_get, null, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_game_engine = new BooleanPropertyRNA(
	null, null,
	-1, "use_game_engine", 2, "Use Game Engine",
	"Current rendering engine is a game engine",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_game_engine_get, null, null, null, false, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_simplify = new BooleanPropertyRNA(
	null, null,
	-1, "use_simplify", 3, "Use Simplify",
	"Enable simplification of scene for quicker preview renders",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_use_simplify_update, 0, null, null,
	0, -1, null,
	RenderSettings_use_simplify_get, RenderSettings_use_simplify_set, null, null, false, null
);

private static IntPropertyRNA rna_RenderSettings_simplify_subdivision = new IntPropertyRNA(
	null, null,
	-1, "simplify_subdivision", 3, "Simplify Subdivision",
	"Global maximum subdivision level",
	0,
	PROP_INT, PROP_UNSIGNED|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_simplify_update, 0, null, null,
	0, -1, null,
	RenderSettings_simplify_subdivision_get, RenderSettings_simplify_subdivision_set, null, null, null,
	0, 6, 0, INT_MAX, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_simplify_child_particles = new FloatPropertyRNA(
	null, null,
	-1, "simplify_child_particles", 3, "Simplify Child Particles",
	"Global child particles percentage",
	0,
	PROP_FLOAT, PROP_FACTOR|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_simplify_update, 0, null, null,
	0, -1, null,
	RenderSettings_simplify_child_particles_get, RenderSettings_simplify_child_particles_set, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

private static IntPropertyRNA rna_RenderSettings_simplify_shadow_samples = new IntPropertyRNA(
	null, null,
	-1, "simplify_shadow_samples", 3, "Simplify Shadow Samples",
	"Global maximum shadow samples",
	0,
	PROP_INT, PROP_UNSIGNED|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_simplify_update, 0, null, null,
	0, -1, null,
	RenderSettings_simplify_shadow_samples_get, RenderSettings_simplify_shadow_samples_set, null, null, null,
	1, 16, 0, INT_MAX, 1, 0, null
);

private static FloatPropertyRNA rna_RenderSettings_simplify_ao_sss = new FloatPropertyRNA(
	null, null,
	-1, "simplify_ao_sss", 3, "Simplify AO and SSS",
	"Global approximate AA and SSS quality factor",
	0,
	PROP_FLOAT, PROP_FACTOR|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	rna_Scene_simplify_update, 0, null, null,
	0, -1, null,
	RenderSettings_simplify_ao_sss_get, RenderSettings_simplify_ao_sss_set, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

private static BooleanPropertyRNA rna_RenderSettings_use_simplify_triangulate = new BooleanPropertyRNA(
	null, null,
	-1, "use_simplify_triangulate", 3, "Skip Quad to Triangles",
	"Disables non-planer quads being triangulated",
	0,
	PROP_BOOLEAN, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	RenderSettings_use_simplify_triangulate_get, RenderSettings_use_simplify_triangulate_set, null, null, false, null
);

static { ListBase tmp = new ListBase();
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_rna_properties);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_rna_type);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_color_mode);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_x);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_y);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_resolution_percentage);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_parts_x);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_parts_y);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_aspect_x);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_aspect_y);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_quality);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_tiff_16bit);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_cineon_log);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_black);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_white);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_cineon_gamma);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_ffmpeg_format);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_fps);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_fps_base);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_frame_map_old);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_frame_map_new);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_dither_intensity);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_pixel_filter_type);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_filter_size);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_alpha_mode);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_octree_resolution);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_raytrace_method);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_instances);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_local_coords);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_antialiasing);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_antialiasing_samples);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_fields);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_field_order);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_fields_still);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_shadows);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_envmaps);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_radiosity);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sss);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_raytrace);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_textures);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_edge_enhance);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_edge_threshold);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_edge_color);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_threads);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_threads_mode);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_motion_blur);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_motion_blur_samples);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_motion_blur_shutter);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_border);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_min_x);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_min_y);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_max_x);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_border_max_y);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_crop_to_border);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_placeholder);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_overwrite);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_compositing);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_color_management);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_file_extension);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_format);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_file_extension);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_is_movie_format);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_free_image_textures);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_free_unused_nodes);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_save_buffers);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_full_sample);
//	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_backbuf);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_display_mode);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_filepath);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_type);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_normal_space);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_quad_split);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_aa_mode);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_selected_to_active);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_normalize);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_clear);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_bake_antialiasing);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_margin);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_distance);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_bake_bias);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_time);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_date);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_frame);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_camera);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_scene);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_note);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_marker);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_filename);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_sequencer_strip);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp_render_time);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_note_text);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_stamp);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_font_size);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_foreground);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_stamp_background);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer_gl_preview);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_sequencer_gl_render);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_sequencer_gl_preview);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_sequencer_gl_render);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_layers);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_single_layer);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_engine);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_has_multiple_engines);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_game_engine);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_simplify);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_subdivision);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_child_particles);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_shadow_samples);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_simplify_ao_sss);
	ListBaseUtil.BLI_addtail(tmp, rna_RenderSettings_use_simplify_triangulate);
}

static { ListBase tmp = new ListBase();
}

public static StructRNA RNA_RenderSettings = new StructRNA(
	RnaRenderLayers.RNA_RenderLayers, RnaToolSettings.RNA_ToolSettings,
	null,
	rna_RenderSettings_rna_properties, rna_RenderSettings_use_simplify_triangulate,
	null,null,
	"RenderSettings", 0, "Render Data", "Rendering settings for a Scene datablock",
	17,
	null, rna_RenderSettings_rna_properties,
	null,
	RnaScene.RNA_Scene,
	null,
	null,
	null,
	null,
	null,
	null, null
);

}


