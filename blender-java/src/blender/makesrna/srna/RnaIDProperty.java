
/* Automatically generated struct definitions for the Data API.
   Do not edit manually, changes will be overwritten.           */

package blender.makesrna.srna;

import blender.makesdna.sdna.*;

import static blender.makesrna.RnaRna.*;
import static blender.makesrna.RnaAccess.*;
import static blender.makesrna.RnaDefine.*;
import static blender.makesrna.RNATypes.*;
import blender.makesrna.rna_internal_types.*;
import blender.blenlib.*;
import blender.blenkernel.*;

import static blender.makesrna.RnaIDUtil.*;

public class RnaIDProperty extends RnaStruct {

/* Autogenerated Functions */

public RnaIDProperty(PointerRNA ptr) { super(ptr); }

private static PropCollectionGetFunc IDProperty_rna_properties_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_builtin_properties_get.get(iter);
}};

private static PropCollectionBeginFunc IDProperty_rna_properties_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_IDProperty_rna_properties;

	rna_builtin_properties_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= IDProperty_rna_properties_get.get(iter);
}};

private static PropCollectionNextFunc IDProperty_rna_properties_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_builtin_properties_next.next(iter);

	if(iter.valid)
		iter.ptr= IDProperty_rna_properties_get.get(iter);
}};

private static PropCollectionEndFunc IDProperty_rna_properties_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropPointerGetFunc IDProperty_rna_type_get = new PropPointerGetFunc() {
public PointerRNA getPtr(PointerRNA ptr)
{
	return rna_builtin_type_get.getPtr(ptr);
}};

private static PropCollectionGetFunc IDProperty_idp_array_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_pointer_inherit_refine(iter.parent, RNA_IDPropertyGroup, rna_iterator_array_get.get(iter));
}};

private static PropCollectionBeginFunc IDProperty_idp_array_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_IDProperty_idp_array;

	rna_IDPArray_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= IDProperty_idp_array_get.get(iter);
}};

private static PropCollectionNextFunc IDProperty_idp_array_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_iterator_array_next.next(iter);

	if(iter.valid)
		iter.ptr= IDProperty_idp_array_get.get(iter);
}};

private static PropCollectionEndFunc IDProperty_idp_array_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_array_end.end(iter);
}};

/* ID Property */
public static CollectionPropertyRNA rna_IDProperty_rna_properties = new CollectionPropertyRNA(
	null, null,
	-1, "rna_properties", 128, "Properties",
	"RNA property collection",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	IDProperty_rna_properties_begin, IDProperty_rna_properties_next, IDProperty_rna_properties_end, IDProperty_rna_properties_get, null, null, rna_builtin_properties_lookup_string, RnaProperty.RNA_Property
);

public static PointerPropertyRNA rna_IDProperty_rna_type = new PointerPropertyRNA(
	null, null,
	-1, "rna_type", 524288, "RNA",
	"RNA type definition",
	0,
	PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	IDProperty_rna_type_get, null, null, null,RnaStruct.RNA_Struct
);

public static StringPropertyRNA rna_IDProperty_string = new StringPropertyRNA(
	null, null,
	-1, "string", 1281, "string",
	"",
	0,
	PROP_STRING, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, 0, ""
);

public static IntPropertyRNA rna_IDProperty_int = new IntPropertyRNA(
	null, null,
	-1, "int", 1283, "int",
	"",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null,
	-10000, 10000, INT_MIN, INT_MAX, 1, 0, null
);

public static IntPropertyRNA rna_IDProperty_int_array = new IntPropertyRNA(
	null, null,
	-1, "int_array", 1283, "int_array",
	"",
	0,
	PROP_INT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{1, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null,
	-10000, 10000, INT_MIN, INT_MAX, 1, 0, null
);

public static FloatPropertyRNA rna_IDProperty_float = new FloatPropertyRNA(
	null, null,
	-1, "float", 1283, "float",
	"",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

public static FloatPropertyRNA rna_IDProperty_float_array = new FloatPropertyRNA(
	null, null,
	-1, "float_array", 1283, "float_array",
	"",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{1, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

public static FloatPropertyRNA rna_IDProperty_double = new FloatPropertyRNA(
	null, null,
	-1, "double", 1283, "double",
	"",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

public static FloatPropertyRNA rna_IDProperty_double_array = new FloatPropertyRNA(
	null, null,
	-1, "double_array", 1283, "double_array",
	"",
	0,
	PROP_FLOAT, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{1, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, null
);

public static PointerPropertyRNA rna_IDProperty_group = new PointerPropertyRNA(
	null, null,
	-1, "group", 1280, "group",
	"",
	0,
	PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null,RNA_IDPropertyGroup
);

public static CollectionPropertyRNA rna_IDProperty_collection = new CollectionPropertyRNA(
	null, null,
	-1, "collection", 1280, "collection",
	"",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	null, null, null, null, null, null, null, RNA_IDPropertyGroup
);

public static CollectionPropertyRNA rna_IDProperty_idp_array = new CollectionPropertyRNA(
	null, null,
	-1, "idp_array", 17664, "idp_array",
	"",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	IDProperty_idp_array_begin, IDProperty_idp_array_next, IDProperty_idp_array_end, IDProperty_idp_array_get, rna_IDPArray_length, null, null, RNA_IDPropertyGroup
);

static { ListBase tmp = new ListBase();
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_rna_properties);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_rna_type);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_string);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_int);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_int_array);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_float);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_float_array);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_double);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_double_array);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_group);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_collection);
	ListBaseUtil.BLI_addtail(tmp, rna_IDProperty_idp_array);
}

static { ListBase tmp = new ListBase();
}

public static StructRNA RNA_IDProperty = new StructRNA(
	RNA_IDPropertyGroup, RNA_AnyType,
	null,
	rna_IDProperty_rna_properties, rna_IDProperty_idp_array,
	null,null,
	"IDProperty", 0, "ID Property", "Property that stores arbitrary, user defined properties",
	17,
	null, rna_IDProperty_rna_properties,
	null,
	null,
	null,
	null,
	null,
	null,
	null,
	null, null
);

}
