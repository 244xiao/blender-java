//package blender.makesrna.srna;
//
//import blender.makesrna.RNATypes.PointerRNA;
//
//public class RnaSpace extends RnaStruct {
//	
//	public boolean show_cache = false;
//	
//	public RnaSpace(PointerRNA ptr) {
//		super(ptr);
//	}
//	
////	@Override
////	public PropertyRNA getProperty(String identifier) {
////		return null;
////	}
//
//}

/* Automatically generated struct definitions for the Data API.
   Do not edit manually, changes will be overwritten.           */

package blender.makesrna.srna;

import blender.makesdna.sdna.*;

import static blender.makesrna.RnaRna.*;
import static blender.makesrna.RnaAccess.*;
import static blender.makesrna.RnaDefine.*;
import static blender.makesrna.RNATypes.*;
import blender.makesrna.rna_internal_types.*;
import blender.blenlib.*;
import blender.blenkernel.*;

import static blender.makesrna.RnaSpaceUtil.*;

public class RnaSpace extends RnaStruct {
	
// inherited from SpaceProperties
public Object getUse_pin_id() {
	return null;
}

/* Autogenerated Functions */

public RnaSpace(PointerRNA ptr) { super(ptr); }

private static PropCollectionGetFunc Space_rna_properties_get = new PropCollectionGetFunc() {
public PointerRNA get(CollectionPropertyIterator iter)
{
	return rna_builtin_properties_get.get(iter);
}};

private static PropCollectionBeginFunc Space_rna_properties_begin = new PropCollectionBeginFunc() {
public void begin(CollectionPropertyIterator iter, PointerRNA ptr)
{

	iter.clear();
	iter.parent= ptr;
	iter.prop= (PropertyRNA)rna_Space_rna_properties;

	rna_builtin_properties_begin.begin(iter, ptr);

	if(iter.valid)
		iter.ptr= Space_rna_properties_get.get(iter);
}};

private static PropCollectionNextFunc Space_rna_properties_next = new PropCollectionNextFunc() {
public void next(CollectionPropertyIterator iter)
{
	rna_builtin_properties_next.next(iter);

	if(iter.valid)
		iter.ptr= Space_rna_properties_get.get(iter);
}};

private static PropCollectionEndFunc Space_rna_properties_end = new PropCollectionEndFunc() {
public void end(CollectionPropertyIterator iter)
{
	rna_iterator_listbase_end.end(iter);
}};

private static PropPointerGetFunc Space_rna_type_get = new PropPointerGetFunc() {
public PointerRNA getPtr(PointerRNA ptr)
{
	return rna_builtin_type_get.getPtr(ptr);
}};

private static PropEnumGetFunc Space_type_get = new PropEnumGetFunc() {
public int getEnum(PointerRNA ptr)
{
	SpaceLink data= (SpaceLink)(ptr.data);
	return (int)(data.spacetype);
}};

/* Space */
private static CollectionPropertyRNA rna_Space_rna_properties = new CollectionPropertyRNA(
	null, null,
	-1, "rna_properties", 128, "Properties",
	"RNA property collection",
	0,
	PROP_COLLECTION, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	Space_rna_properties_begin, Space_rna_properties_next, Space_rna_properties_end, Space_rna_properties_get, null, null, rna_builtin_properties_lookup_string, RnaProperty.RNA_Property
);

private static PointerPropertyRNA rna_Space_rna_type = new PointerPropertyRNA(
	null, null,
	-1, "rna_type", 524288, "RNA",
	"RNA type definition",
	0,
	PROP_POINTER, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	Space_rna_type_get, null, null, null,RnaStruct.RNA_Struct
);

private static EnumPropertyItem[] rna_Space_type_items = {
	new EnumPropertyItem(0, "EMPTY", 0, "Empty", ""),
	new EnumPropertyItem(1, "VIEW_3D", 0, "3D View", ""),
	new EnumPropertyItem(2, "GRAPH_EDITOR", 0, "Graph Editor", ""),
	new EnumPropertyItem(3, "OUTLINER", 0, "Outliner", ""),
	new EnumPropertyItem(4, "PROPERTIES", 0, "Properties", ""),
	new EnumPropertyItem(5, "FILE_BROWSER", 0, "File Browser", ""),
	new EnumPropertyItem(6, "IMAGE_EDITOR", 0, "Image Editor", ""),
	new EnumPropertyItem(7, "INFO", 0, "Info", ""),
	new EnumPropertyItem(8, "SEQUENCE_EDITOR", 0, "Sequence Editor", ""),
	new EnumPropertyItem(9, "TEXT_EDITOR", 0, "Text Editor", ""),
	new EnumPropertyItem(11, "AUDIO_WINDOW", 0, "Audio Window", ""),
	new EnumPropertyItem(12, "DOPESHEET_EDITOR", 0, "DopeSheet Editor", ""),
	new EnumPropertyItem(13, "NLA_EDITOR", 0, "NLA Editor", ""),
	new EnumPropertyItem(14, "SCRIPTS_WINDOW", 0, "Scripts Window", ""),
	new EnumPropertyItem(15, "TIMELINE", 0, "Timeline", ""),
	new EnumPropertyItem(16, "NODE_EDITOR", 0, "Node Editor", ""),
	new EnumPropertyItem(17, "LOGIC_EDITOR", 0, "Logic Editor", ""),
	new EnumPropertyItem(18, "CONSOLE", 0, "Python Console", ""),
	new EnumPropertyItem(19, "USER_PREFERENCES", 0, "User Preferences", ""),
	new EnumPropertyItem(0, null, 0, null, null)
};

private static EnumPropertyRNA rna_Space_type = new EnumPropertyRNA(
	null, null,
	-1, "type", 2, "Type",
	"Space data type",
	0,
	PROP_ENUM, PROP_NONE|PROP_UNIT_NONE, null, 0, new int[]{0, 0, 0}, 0,
	null, 0, null, null,
	0, -1, null,
	Space_type_get, null, null, rna_Space_type_items, 19, 0
);

static { ListBase tmp = new ListBase();
	ListBaseUtil.BLI_addtail(tmp, rna_Space_rna_properties);
	ListBaseUtil.BLI_addtail(tmp, rna_Space_rna_type);
	ListBaseUtil.BLI_addtail(tmp, rna_Space_type);
}

static { ListBase tmp = new ListBase();
}

public static StructRNA RNA_Space = new StructRNA(
	RnaSpaceOutliner.RNA_SpaceOutliner, RNA_Region,
	null,
	rna_Space_rna_properties, rna_Space_type,
	null,null,
	"Space", 0, "Space", "Space data for a screen area",
	17,
	null, rna_Space_rna_properties,
	null,
	null,
	rna_Space_refine,
	null,
	null,
	null,
	null,
	null, null
);

}
